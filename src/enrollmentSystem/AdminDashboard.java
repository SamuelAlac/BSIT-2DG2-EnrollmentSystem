    /*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package enrollmentSystem;
import java.awt.Cursor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Statement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.MessageFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
import java.awt.print.PrinterException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.standard.OrientationRequested;
import javax.swing.Action;
import javax.swing.JTable.PrintMode;
import javax.swing.Timer;


 // Define the AdminDashboaard class that inherits JFrame to create a GUI window
public class AdminDashboard extends javax.swing.JFrame {
    Connection adminConnect;// Connection for admin database
    PreparedStatement pst = null;// PreparedStatement for executing SQL queries
    Statement st = null;// Statement for executing SQL queries
    ResultSet rs = null;// ResultSet for storing the result of SQL queries

    
    // Constructor for AdminDashboard
    public AdminDashboard() {
        initComponents();
        adminConnect = UserLogins.admin();// Establish a connection for admin user
        CollegeTable();// Populate the college table with data
        CourseTable();// Populate the course table with data
        SectionTable();// Populate the section table with data
        StudentTable();// Populate the student table with data
        RegistrationTable();// Populate the registration table with data
        EmployeeTable();// Populate the employee table with data
        SubjectTable();// Populate the subject table with data
        CourseSubTable();// Populate the course-subject table with data
        RegisteredListTable();// Populate the registered list table with data
        StudentAccounts();// Load student accounts data
        StudentLogs(); // Load logs related to student activities
        EmployeeAccounts();// Load employee accounts data
        EmployeeLogs(); // Load logs related to employee activities
        Date();// Display the current date on the dashboard
        Time();// Display the current time on the dashboard
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        user = new javax.swing.JLabel();
        logout = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        home = new javax.swing.JLabel();
        enroll = new javax.swing.JLabel();
        course = new javax.swing.JLabel();
        employee = new javax.swing.JLabel();
        coursesubject = new javax.swing.JLabel();
        section = new javax.swing.JLabel();
        student = new javax.swing.JLabel();
        registration = new javax.swing.JLabel();
        subject = new javax.swing.JLabel();
        registeredlist = new javax.swing.JLabel();
        studentAccounts = new javax.swing.JLabel();
        employeeAccounts = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        l_time = new javax.swing.JLabel();
        l_date = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txt_colcode = new javax.swing.JTextField();
        txt_colname = new javax.swing.JTextField();
        collegeInsert = new javax.swing.JButton();
        collegeUpdate = new javax.swing.JButton();
        collegeDelete = new javax.swing.JButton();
        collegePrint = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        collegeTable = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        txt_search = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        txt_coursecode = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txt_coursedesc = new javax.swing.JTextField();
        college = new javax.swing.JLabel();
        txt_college = new javax.swing.JTextField();
        courseInsert = new javax.swing.JButton();
        courseUpdate = new javax.swing.JButton();
        courseDelete = new javax.swing.JButton();
        coursePrint = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        txt_search1 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        courseTable = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txt_section = new javax.swing.JTextField();
        txt_course = new javax.swing.JTextField();
        sectionInsert = new javax.swing.JButton();
        sectionUpdate = new javax.swing.JButton();
        sectionDelete = new javax.swing.JButton();
        sectionPrint = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        sectionTable = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        txt_search2 = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txt_studno = new javax.swing.JTextField();
        txt_lname = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txt_fname = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txt_mname = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txt_gender = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txt_bdate = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txt_street = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txt_brgy = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        txt_city = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        txt_province = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        txt_postal = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        txt_enrolled = new javax.swing.JTextField();
        studentUpdate = new javax.swing.JButton();
        studentDelete = new javax.swing.JButton();
        studentPrint = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        txt_search3 = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        studentTable = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        txt_student = new javax.swing.JTextField();
        txt_sec = new javax.swing.JTextField();
        registrationUpdate = new javax.swing.JButton();
        registrationDelete = new javax.swing.JButton();
        registrationPrint = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        registrationTable = new javax.swing.JTable();
        jLabel33 = new javax.swing.JLabel();
        txt_search4 = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        txt_empno = new javax.swing.JTextField();
        txt_lname1 = new javax.swing.JTextField();
        txt_fname1 = new javax.swing.JTextField();
        txt_mname1 = new javax.swing.JTextField();
        txt_emprank = new javax.swing.JTextField();
        txt_pos = new javax.swing.JTextField();
        txt_bdate1 = new javax.swing.JTextField();
        employeeUpdate = new javax.swing.JButton();
        employeeDelete = new javax.swing.JButton();
        employeeInsert = new javax.swing.JButton();
        jLabel42 = new javax.swing.JLabel();
        txt_email = new javax.swing.JTextField();
        employeePrint = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        employeeTable = new javax.swing.JTable();
        jLabel41 = new javax.swing.JLabel();
        txt_search5 = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        txt_lec = new javax.swing.JTextField();
        txt_title = new javax.swing.JTextField();
        txt_subj = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        txt_lab = new javax.swing.JTextField();
        txt_emp = new javax.swing.JTextField();
        subjectInsert = new javax.swing.JButton();
        subjectUpdate = new javax.swing.JButton();
        subjectDelete = new javax.swing.JButton();
        subjectPrint = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        subjectTable = new javax.swing.JTable();
        jLabel46 = new javax.swing.JLabel();
        txt_search6 = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        txt_sect = new javax.swing.JTextField();
        txt_sub = new javax.swing.JTextField();
        txt_yr = new javax.swing.JTextField();
        txt_sem = new javax.swing.JTextField();
        coursesubInsert = new javax.swing.JButton();
        coursesubUpdate = new javax.swing.JButton();
        coursesubDelete = new javax.swing.JButton();
        coursesubPrint = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        coursesubTable = new javax.swing.JTable();
        jLabel53 = new javax.swing.JLabel();
        txt_search7 = new javax.swing.JTextField();
        jPanel20 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jLabel54 = new javax.swing.JLabel();
        txt_search8 = new javax.swing.JTextField();
        registeredListPrint = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        registeredListTable = new javax.swing.JTable();
        jPanel21 = new javax.swing.JPanel();
        jPanel24 = new javax.swing.JPanel();
        jLabel55 = new javax.swing.JLabel();
        txt_studacc = new javax.swing.JTextField();
        studentAccUpdate = new javax.swing.JButton();
        jLabel57 = new javax.swing.JLabel();
        txt_studstat = new javax.swing.JTextField();
        studentAccPrint = new javax.swing.JButton();
        jLabel56 = new javax.swing.JLabel();
        txt_search9 = new javax.swing.JTextField();
        jScrollPane11 = new javax.swing.JScrollPane();
        studentAccountsTable = new javax.swing.JTable();
        jScrollPane13 = new javax.swing.JScrollPane();
        studentLogs = new javax.swing.JTable();
        refreshStudentLogs = new javax.swing.JLabel();
        jPanel22 = new javax.swing.JPanel();
        jPanel25 = new javax.swing.JPanel();
        jLabel58 = new javax.swing.JLabel();
        txt_empacc = new javax.swing.JTextField();
        employeeAccUpdate = new javax.swing.JButton();
        jLabel59 = new javax.swing.JLabel();
        txt_empstat = new javax.swing.JTextField();
        employeeAccPrint = new javax.swing.JButton();
        jLabel60 = new javax.swing.JLabel();
        txt_search10 = new javax.swing.JTextField();
        jScrollPane12 = new javax.swing.JScrollPane();
        employeeAccountsTable = new javax.swing.JTable();
        jScrollPane14 = new javax.swing.JScrollPane();
        employeeLogs = new javax.swing.JTable();
        refreshEmployeeLogs = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(163, 67, 67));

        jLabel1.setFont(new java.awt.Font("Imprint MT Shadow", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Student Enrollment System");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        user.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        user.setForeground(new java.awt.Color(255, 255, 255));
        user.setText("jLabel2");
        try{
            adminConnect = UserLogins.admin();
            String username = "SELECT TOP 1 fname+ ' '+lname AS 'Username' FROM EMPLOYEE ORDER BY loginDate DESC, loginTime DESC";
            pst = adminConnect.prepareStatement(username);
            ResultSet rs = pst.executeQuery();

            if(!rs.next()){
                JOptionPane.showMessageDialog(null,"error");
            }else{
                user.setText(rs.getString("Username"));
            }

        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }

        logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/enrollmentSystem/logout.png"))); // NOI18N
        logout.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                logoutMouseMoved(evt);
            }
        });
        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(180, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 769, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logout)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logout)))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, -1));

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));

        home.setBackground(new java.awt.Color(255, 255, 255));
        home.setForeground(new java.awt.Color(255, 255, 255));
        home.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        home.setText("Home");
        home.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                homeMouseMoved(evt);
            }
        });
        home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homeMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                homeMousePressed(evt);
            }
        });

        enroll.setForeground(new java.awt.Color(255, 255, 255));
        enroll.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        enroll.setText("College");
        enroll.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                enrollMouseMoved(evt);
            }
        });
        enroll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                enrollMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                enrollMousePressed(evt);
            }
        });

        course.setBackground(new java.awt.Color(255, 255, 255));
        course.setForeground(new java.awt.Color(255, 255, 255));
        course.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        course.setText("Course");
        course.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                courseMouseMoved(evt);
            }
        });
        course.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                courseMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                courseMousePressed(evt);
            }
        });

        employee.setForeground(new java.awt.Color(255, 255, 255));
        employee.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        employee.setText("Employee");
        employee.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                employeeMouseMoved(evt);
            }
        });
        employee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                employeeMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                employeeMousePressed(evt);
            }
        });

        coursesubject.setForeground(new java.awt.Color(255, 255, 255));
        coursesubject.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        coursesubject.setText("COURSE SUBJECT");
        coursesubject.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                coursesubjectMouseMoved(evt);
            }
        });
        coursesubject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                coursesubjectMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                coursesubjectMousePressed(evt);
            }
        });

        section.setForeground(new java.awt.Color(255, 255, 255));
        section.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        section.setText("SECTION");
        section.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                sectionMouseMoved(evt);
            }
        });
        section.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sectionMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                sectionMousePressed(evt);
            }
        });

        student.setForeground(new java.awt.Color(255, 255, 255));
        student.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        student.setText("STUDENT");
        student.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                studentMouseMoved(evt);
            }
        });
        student.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                studentMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                studentMousePressed(evt);
            }
        });

        registration.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        registration.setForeground(new java.awt.Color(255, 255, 255));
        registration.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        registration.setText("REGISTRATION");
        registration.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                registrationMouseMoved(evt);
            }
        });
        registration.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                registrationMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                registrationMousePressed(evt);
            }
        });

        subject.setForeground(new java.awt.Color(255, 255, 255));
        subject.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        subject.setText("SUBJECT");
        subject.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                subjectMouseMoved(evt);
            }
        });
        subject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                subjectMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                subjectMousePressed(evt);
            }
        });

        registeredlist.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        registeredlist.setForeground(new java.awt.Color(255, 255, 255));
        registeredlist.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        registeredlist.setText("Registered List");
        registeredlist.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                registeredlistMouseMoved(evt);
            }
        });
        registeredlist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                registeredlistMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                registeredlistMousePressed(evt);
            }
        });

        studentAccounts.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        studentAccounts.setForeground(new java.awt.Color(255, 255, 255));
        studentAccounts.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        studentAccounts.setText("Student Accounts");
        studentAccounts.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                studentAccountsMouseMoved(evt);
            }
        });
        studentAccounts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                studentAccountsMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                studentAccountsMousePressed(evt);
            }
        });

        employeeAccounts.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        employeeAccounts.setForeground(new java.awt.Color(255, 255, 255));
        employeeAccounts.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        employeeAccounts.setText("Employee Accounts");
        employeeAccounts.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                employeeAccountsMouseMoved(evt);
            }
        });
        employeeAccounts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                employeeAccountsMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                employeeAccountsMousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(home, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(enroll, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
            .addComponent(section, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(student, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(registration, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(course, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(subject, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(coursesubject, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(employee, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(registeredlist, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(studentAccounts, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(employeeAccounts, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(home, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(enroll, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(course, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(section, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(student, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(registration, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(employee, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(subject, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(coursesubject, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(registeredlist, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(studentAccounts, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(employeeAccounts, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(73, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, -1, 560));

        jTabbedPane1.setBackground(new java.awt.Color(246, 245, 242));

        jPanel3.setBackground(new java.awt.Color(246, 245, 242));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/enrollmentSystem/bsuLogo (1).png"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("BULSU Student Enrollment System");

        l_time.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N

        l_date.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 866, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(32, 32, 32))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(l_time, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_date, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 317, Short.MAX_VALUE)
                .addComponent(l_time, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l_date, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        jTabbedPane1.addTab("tab1", jPanel3);

        jPanel4.setBackground(new java.awt.Color(246, 245, 242));

        jPanel12.setBackground(new java.awt.Color(246, 245, 242));
        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "College List", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("College Code:");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("College Name:");

        collegeInsert.setBackground(new java.awt.Color(51, 51, 255));
        collegeInsert.setForeground(new java.awt.Color(255, 255, 255));
        collegeInsert.setText("INSERT");
        collegeInsert.setBorder(null);
        collegeInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                collegeInsertActionPerformed(evt);
            }
        });

        collegeUpdate.setBackground(new java.awt.Color(255, 150, 0));
        collegeUpdate.setForeground(new java.awt.Color(255, 255, 255));
        collegeUpdate.setText("UPDATE");
        collegeUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                collegeUpdateActionPerformed(evt);
            }
        });

        collegeDelete.setBackground(new java.awt.Color(140, 2, 39));
        collegeDelete.setForeground(new java.awt.Color(255, 255, 255));
        collegeDelete.setText("DELETE");
        collegeDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                collegeDeleteActionPerformed(evt);
            }
        });

        collegePrint.setBackground(new java.awt.Color(102, 102, 102));
        collegePrint.setForeground(new java.awt.Color(255, 255, 255));
        collegePrint.setText("PRINT");
        collegePrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                collegePrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(collegePrint, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_colcode, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_colname, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(collegeInsert, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(collegeUpdate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(collegeDelete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(631, 631, 631))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_colcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(collegeInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(collegeUpdate)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_colname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(collegeDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(collegePrint)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        collegeTable.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        collegeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        collegeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                collegeTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(collegeTable);

        jLabel10.setText("Search by: ColCode ");

        txt_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_searchKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(147, 147, 147))
        );

        jTabbedPane1.addTab("tab2", jPanel4);

        jPanel5.setBackground(new java.awt.Color(246, 245, 242));

        jPanel13.setBackground(new java.awt.Color(246, 245, 242));
        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Course List", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Course Code:");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Course Desc:");

        college.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        college.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        college.setText("College: ");

        courseInsert.setBackground(new java.awt.Color(51, 51, 255));
        courseInsert.setForeground(new java.awt.Color(255, 255, 255));
        courseInsert.setText("INSERT");
        courseInsert.setBorder(null);
        courseInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseInsertActionPerformed(evt);
            }
        });

        courseUpdate.setBackground(new java.awt.Color(255, 150, 0));
        courseUpdate.setForeground(new java.awt.Color(255, 255, 255));
        courseUpdate.setText("UPDATE");
        courseUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseUpdateActionPerformed(evt);
            }
        });

        courseDelete.setBackground(new java.awt.Color(140, 2, 39));
        courseDelete.setForeground(new java.awt.Color(255, 255, 255));
        courseDelete.setText("DELETE");
        courseDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseDeleteActionPerformed(evt);
            }
        });

        coursePrint.setBackground(new java.awt.Color(102, 102, 102));
        coursePrint.setForeground(new java.awt.Color(255, 255, 255));
        coursePrint.setText("PRINT");
        coursePrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coursePrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel13Layout.createSequentialGroup()
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txt_coursedesc, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel13Layout.createSequentialGroup()
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txt_coursecode, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(college, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_college, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(70, 70, 70)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(courseDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(courseInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(courseUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(coursePrint, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(606, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_coursecode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_coursedesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(college, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_college, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(courseInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(courseUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(courseDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(coursePrint)))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jLabel14.setText("Search by: Course Code");

        txt_search1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_search1KeyTyped(evt);
            }
        });

        courseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        courseTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                courseTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(courseTable);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_search1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_search1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(394, 394, 394))
        );

        jTabbedPane1.addTab("tab3", jPanel5);

        jPanel6.setBackground(new java.awt.Color(246, 245, 242));

        jPanel14.setBackground(new java.awt.Color(246, 245, 242));
        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Section List", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Section:");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Course:");

        sectionInsert.setBackground(new java.awt.Color(51, 51, 255));
        sectionInsert.setForeground(new java.awt.Color(255, 255, 255));
        sectionInsert.setText("INSERT");
        sectionInsert.setBorder(null);
        sectionInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sectionInsertActionPerformed(evt);
            }
        });

        sectionUpdate.setBackground(new java.awt.Color(255, 150, 0));
        sectionUpdate.setForeground(new java.awt.Color(255, 255, 255));
        sectionUpdate.setText("UPDATE");
        sectionUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sectionUpdateActionPerformed(evt);
            }
        });

        sectionDelete.setBackground(new java.awt.Color(140, 2, 39));
        sectionDelete.setForeground(new java.awt.Color(255, 255, 255));
        sectionDelete.setText("DELETE");
        sectionDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sectionDeleteActionPerformed(evt);
            }
        });

        sectionPrint.setBackground(new java.awt.Color(102, 102, 102));
        sectionPrint.setForeground(new java.awt.Color(255, 255, 255));
        sectionPrint.setText("PRINT");
        sectionPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sectionPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_course, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_section, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(47, 47, 47)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sectionPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sectionDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sectionInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sectionUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(sectionInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sectionUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sectionDelete))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_section, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_course, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sectionPrint)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        sectionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        sectionTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sectionTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(sectionTable);

        jLabel17.setText("Search by: Section");

        txt_search2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_search2KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_search2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1064, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_search2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56))
        );

        jTabbedPane1.addTab("tab4", jPanel6);

        jPanel7.setBackground(new java.awt.Color(245, 246, 242));

        jPanel15.setBackground(new java.awt.Color(246, 245, 242));
        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Student Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Student No:");

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Last Name:");

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("First Name:");

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Middle Name:");

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("Gender:");

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Birth Date:");

        txt_bdate.setText("MM-DD-YYYY");
        txt_bdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_bdateMouseClicked(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("Street:");

        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("Baranggay");

        jLabel26.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("City:");

        jLabel27.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("Province:");

        jLabel28.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setText("Postal Code:");

        jLabel29.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel29.setText("Date Enrolled:");

        studentUpdate.setBackground(new java.awt.Color(255, 150, 0));
        studentUpdate.setForeground(new java.awt.Color(255, 255, 255));
        studentUpdate.setText("UPDATE");
        studentUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentUpdateActionPerformed(evt);
            }
        });

        studentDelete.setBackground(new java.awt.Color(140, 2, 39));
        studentDelete.setForeground(new java.awt.Color(255, 255, 255));
        studentDelete.setText("DELETE");
        studentDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentDeleteActionPerformed(evt);
            }
        });

        studentPrint.setBackground(new java.awt.Color(102, 102, 102));
        studentPrint.setForeground(new java.awt.Color(255, 255, 255));
        studentPrint.setText("PRINT");
        studentPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(txt_mname, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel15Layout.createSequentialGroup()
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txt_lname, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel15Layout.createSequentialGroup()
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txt_studno, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_fname, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(txt_brgy, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel15Layout.createSequentialGroup()
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txt_bdate, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel15Layout.createSequentialGroup()
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txt_gender, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_street, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(txt_enrolled, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(170, Short.MAX_VALUE))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel15Layout.createSequentialGroup()
                                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txt_province, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel15Layout.createSequentialGroup()
                                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txt_city, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_postal, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(studentDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(studentUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(studentPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21))))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_city, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_province, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_postal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_enrolled, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_studno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_lname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_fname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_mname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_bdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_street, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_brgy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(studentUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(studentDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(studentPrint)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jLabel30.setText("Search by: Last Name");

        txt_search3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_search3KeyTyped(evt);
            }
        });

        studentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        studentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                studentTableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(studentTable);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_search3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane5))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_search3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58))
        );

        jTabbedPane1.addTab("tab5", jPanel7);

        jPanel8.setBackground(new java.awt.Color(246, 245, 242));

        jPanel16.setBackground(new java.awt.Color(246, 245, 242));
        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Registered Students", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        jLabel31.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel31.setText("Student No:");

        jLabel32.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel32.setText("Section:");

        registrationUpdate.setBackground(new java.awt.Color(255, 150, 0));
        registrationUpdate.setForeground(new java.awt.Color(255, 255, 255));
        registrationUpdate.setText("UPDATE");
        registrationUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrationUpdateActionPerformed(evt);
            }
        });

        registrationDelete.setBackground(new java.awt.Color(140, 2, 39));
        registrationDelete.setForeground(new java.awt.Color(255, 255, 255));
        registrationDelete.setText("DELETE");
        registrationDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrationDeleteActionPerformed(evt);
            }
        });

        registrationPrint.setBackground(new java.awt.Color(102, 102, 102));
        registrationPrint.setForeground(new java.awt.Color(255, 255, 255));
        registrationPrint.setText("PRINT");
        registrationPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrationPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_sec, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_student, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(70, 70, 70)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(registrationPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(registrationDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(registrationUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(609, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_student, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(registrationUpdate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_sec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(registrationDelete))
                    .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(registrationPrint)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        registrationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        registrationTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                registrationTableMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(registrationTable);

        jLabel33.setText("Search by: Student No");

        txt_search4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_search4KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_search4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane6))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_search4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(111, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab6", jPanel8);

        jPanel9.setBackground(new java.awt.Color(246, 245, 242));

        jPanel17.setBackground(new java.awt.Color(246, 245, 242));
        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Employee Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        jLabel34.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel34.setText("Employee No:");

        jLabel35.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel35.setText("Last Name:");

        jLabel36.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel36.setText("First Name:");

        jLabel37.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel37.setText("Middle Name:");

        jLabel38.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel38.setText("Employee Rank:");

        jLabel39.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel39.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel39.setText("Position:");

        jLabel40.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel40.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel40.setText("Birth Date:");

        txt_bdate1.setText("MM-DD-YYYY");
        txt_bdate1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_bdate1MouseClicked(evt);
            }
        });

        employeeUpdate.setBackground(new java.awt.Color(255, 150, 0));
        employeeUpdate.setForeground(new java.awt.Color(255, 255, 255));
        employeeUpdate.setText("UPDATE");
        employeeUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeeUpdateActionPerformed(evt);
            }
        });

        employeeDelete.setBackground(new java.awt.Color(140, 2, 39));
        employeeDelete.setForeground(new java.awt.Color(255, 255, 255));
        employeeDelete.setText("DELETE");
        employeeDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeeDeleteActionPerformed(evt);
            }
        });

        employeeInsert.setBackground(new java.awt.Color(51, 51, 255));
        employeeInsert.setForeground(new java.awt.Color(255, 255, 255));
        employeeInsert.setText("INSERT");
        employeeInsert.setBorder(null);
        employeeInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeeInsertActionPerformed(evt);
            }
        });

        jLabel42.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel42.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel42.setText("Email:");

        employeePrint.setBackground(new java.awt.Color(102, 102, 102));
        employeePrint.setForeground(new java.awt.Color(255, 255, 255));
        employeePrint.setText("PRINT");
        employeePrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeePrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(txt_mname1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel17Layout.createSequentialGroup()
                            .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txt_lname1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel17Layout.createSequentialGroup()
                            .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txt_empno, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_fname1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel17Layout.createSequentialGroup()
                            .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txt_pos, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel17Layout.createSequentialGroup()
                            .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txt_emprank, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_bdate1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(47, 47, 47)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(employeeInsert, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(employeeUpdate, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addComponent(employeeDelete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(employeePrint, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(352, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel17Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(employeeInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_emprank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel17Layout.createSequentialGroup()
                                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(15, 15, 15)
                                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_bdate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel17Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(employeeUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(employeeDelete)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(employeePrint))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addContainerGap(9, Short.MAX_VALUE)
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_empno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_lname1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_fname1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_mname1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        employeeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        employeeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                employeeTableMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(employeeTable);

        jLabel41.setText("Search by: Last Name");

        txt_search5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_search5KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_search5, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 1063, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_search5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(94, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab7", jPanel9);

        jPanel10.setBackground(new java.awt.Color(246, 245, 242));

        jPanel18.setBackground(new java.awt.Color(246, 245, 242));
        jPanel18.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Subjects List", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        jLabel43.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel43.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel43.setText("Subject Code:");

        jLabel44.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel44.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel44.setText("Subject Title");

        jLabel45.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel45.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel45.setText("Lecture:");

        jLabel47.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel47.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel47.setText("Laboratory:");

        jLabel48.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel48.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel48.setText("Employee:");

        subjectInsert.setBackground(new java.awt.Color(51, 51, 255));
        subjectInsert.setForeground(new java.awt.Color(255, 255, 255));
        subjectInsert.setText("INSERT");
        subjectInsert.setBorder(null);
        subjectInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectInsertActionPerformed(evt);
            }
        });

        subjectUpdate.setBackground(new java.awt.Color(255, 150, 0));
        subjectUpdate.setForeground(new java.awt.Color(255, 255, 255));
        subjectUpdate.setText("UPDATE");
        subjectUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectUpdateActionPerformed(evt);
            }
        });

        subjectDelete.setBackground(new java.awt.Color(140, 2, 39));
        subjectDelete.setForeground(new java.awt.Color(255, 255, 255));
        subjectDelete.setText("DELETE");
        subjectDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectDeleteActionPerformed(evt);
            }
        });

        subjectPrint.setBackground(new java.awt.Color(102, 102, 102));
        subjectPrint.setForeground(new java.awt.Color(255, 255, 255));
        subjectPrint.setText("PRINT");
        subjectPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel18Layout.createSequentialGroup()
                                .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_title, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel18Layout.createSequentialGroup()
                                .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_subj, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel18Layout.createSequentialGroup()
                                .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(txt_emp, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel18Layout.createSequentialGroup()
                                .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_lab, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_lec, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(subjectDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subjectInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subjectUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subjectPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(336, 336, 336))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addComponent(subjectInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(subjectUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(subjectDelete))
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel18Layout.createSequentialGroup()
                                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_subj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel18Layout.createSequentialGroup()
                                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_lab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_emp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_lec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(subjectPrint)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        subjectTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        subjectTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                subjectTableMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(subjectTable);

        jLabel46.setText("Search by: Subject Title");

        txt_search6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_search6KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_search6, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane8))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel46, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_search6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(95, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab8", jPanel10);

        jPanel11.setBackground(new java.awt.Color(246, 245, 242));

        jPanel19.setBackground(new java.awt.Color(246, 245, 242));
        jPanel19.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Course Subjects", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        jLabel49.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel49.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel49.setText("Section:");

        jLabel50.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel50.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel50.setText("Subject Code:");

        jLabel51.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel51.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel51.setText("Year Level:");

        jLabel52.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel52.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel52.setText("Semester:");

        coursesubInsert.setBackground(new java.awt.Color(51, 51, 255));
        coursesubInsert.setForeground(new java.awt.Color(255, 255, 255));
        coursesubInsert.setText("INSERT");
        coursesubInsert.setBorder(null);
        coursesubInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coursesubInsertActionPerformed(evt);
            }
        });

        coursesubUpdate.setBackground(new java.awt.Color(255, 150, 0));
        coursesubUpdate.setForeground(new java.awt.Color(255, 255, 255));
        coursesubUpdate.setText("UPDATE");
        coursesubUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coursesubUpdateActionPerformed(evt);
            }
        });

        coursesubDelete.setBackground(new java.awt.Color(140, 2, 39));
        coursesubDelete.setForeground(new java.awt.Color(255, 255, 255));
        coursesubDelete.setText("DELETE");
        coursesubDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coursesubDeleteActionPerformed(evt);
            }
        });

        coursesubPrint.setBackground(new java.awt.Color(102, 102, 102));
        coursesubPrint.setForeground(new java.awt.Color(255, 255, 255));
        coursesubPrint.setText("PRINT");
        coursesubPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coursesubPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel19Layout.createSequentialGroup()
                            .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txt_sub, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel19Layout.createSequentialGroup()
                            .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txt_sect, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_yr, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(txt_sem, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(59, 59, 59)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(coursesubPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(coursesubDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(coursesubInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(coursesubUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(627, Short.MAX_VALUE))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_sect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_sub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_yr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addComponent(coursesubInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(coursesubUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(coursesubDelete)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_sem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(coursesubPrint))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        coursesubTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        coursesubTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                coursesubTableMouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(coursesubTable);

        jLabel53.setText("Search by: Section");

        txt_search7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_search7KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel53, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_search7, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane9))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel53, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_search7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );

        jTabbedPane1.addTab("tab9", jPanel11);

        jPanel20.setBackground(new java.awt.Color(246, 245, 242));

        jPanel23.setBackground(new java.awt.Color(246, 245, 242));
        jPanel23.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Registered List", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        jLabel54.setText("Search by: Year Level");

        txt_search8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_search8KeyTyped(evt);
            }
        });

        registeredListPrint.setBackground(new java.awt.Color(102, 102, 102));
        registeredListPrint.setForeground(new java.awt.Color(255, 255, 255));
        registeredListPrint.setText("PRINT");
        registeredListPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registeredListPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt_search8, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(registeredListPrint)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel54, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_search8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(registeredListPrint))
                .addContainerGap())
        );

        registeredListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane10.setViewportView(registeredListTable);

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 1067, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(131, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab10", jPanel20);

        jPanel21.setBackground(new java.awt.Color(246, 245, 242));

        jPanel24.setBackground(new java.awt.Color(246, 245, 242));
        jPanel24.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Student Account", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        jLabel55.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel55.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel55.setText("Student No:");

        studentAccUpdate.setBackground(new java.awt.Color(255, 150, 0));
        studentAccUpdate.setForeground(new java.awt.Color(255, 255, 255));
        studentAccUpdate.setText("UPDATE");
        studentAccUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentAccUpdateActionPerformed(evt);
            }
        });

        jLabel57.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel57.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel57.setText("Student Status:");

        studentAccPrint.setBackground(new java.awt.Color(102, 102, 102));
        studentAccPrint.setForeground(new java.awt.Color(255, 255, 255));
        studentAccPrint.setText("PRINT");
        studentAccPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentAccPrintActionPerformed(evt);
            }
        });

        jLabel56.setText("Search by: Status");

        txt_search9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_search9KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_studacc, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(studentAccUpdate))
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_studstat, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(studentAccPrint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(59, 59, 59)
                .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_search9, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(320, Short.MAX_VALUE))
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_studacc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(studentAccUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_studstat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(studentAccPrint)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(txt_search9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel56, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        studentAccountsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        studentAccountsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                studentAccountsTableMouseClicked(evt);
            }
        });
        jScrollPane11.setViewportView(studentAccountsTable);

        studentLogs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        studentLogs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                studentLogsMouseClicked(evt);
            }
        });
        jScrollPane13.setViewportView(studentLogs);

        refreshStudentLogs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/enrollmentSystem/refresh.png"))); // NOI18N
        refreshStudentLogs.setText("jLabel4");
        refreshStudentLogs.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                refreshStudentLogsMouseMoved(evt);
            }
        });
        refreshStudentLogs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshStudentLogsMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane13)
                            .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane11)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel21Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(refreshStudentLogs, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(refreshStudentLogs)
                .addContainerGap())
        );

        jTabbedPane1.addTab("tab11", jPanel21);

        jPanel22.setBackground(new java.awt.Color(246, 245, 242));

        jPanel25.setBackground(new java.awt.Color(246, 245, 242));
        jPanel25.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Employee Account", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        jLabel58.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel58.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel58.setText("Employee No:");

        employeeAccUpdate.setBackground(new java.awt.Color(255, 150, 0));
        employeeAccUpdate.setForeground(new java.awt.Color(255, 255, 255));
        employeeAccUpdate.setText("UPDATE");
        employeeAccUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeeAccUpdateActionPerformed(evt);
            }
        });

        jLabel59.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel59.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel59.setText("Status Status:");

        employeeAccPrint.setBackground(new java.awt.Color(102, 102, 102));
        employeeAccPrint.setForeground(new java.awt.Color(255, 255, 255));
        employeeAccPrint.setText("PRINT");
        employeeAccPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeeAccPrintActionPerformed(evt);
            }
        });

        jLabel60.setText("Search by: Status");

        txt_search10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_search10KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_empacc, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(employeeAccUpdate))
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addComponent(jLabel59, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_empstat, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(employeeAccPrint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(44, 44, 44)
                .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_search10, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(335, Short.MAX_VALUE))
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_empacc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(employeeAccUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel60, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_search10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                        .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel59, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_empstat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(employeeAccPrint)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        employeeAccountsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        employeeAccountsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                employeeAccountsTableMouseClicked(evt);
            }
        });
        jScrollPane12.setViewportView(employeeAccountsTable);

        employeeLogs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        employeeLogs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                employeeLogsMouseClicked(evt);
            }
        });
        jScrollPane14.setViewportView(employeeLogs);

        refreshEmployeeLogs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/enrollmentSystem/refresh.png"))); // NOI18N
        refreshEmployeeLogs.setText("jLabel4");
        refreshEmployeeLogs.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                refreshEmployeeLogsMouseMoved(evt);
            }
        });
        refreshEmployeeLogs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshEmployeeLogsMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane14)
                            .addComponent(jScrollPane12)
                            .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel22Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(refreshEmployeeLogs, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(refreshEmployeeLogs)
                .addContainerGap())
        );

        jTabbedPane1.addTab("tab12", jPanel22);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(98, 32, 1100, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void homeMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeMouseMoved
        // TODO add your handling code here:
        home.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_homeMouseMoved

    private void homeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeMouseClicked
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_homeMouseClicked

    private void homeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeMousePressed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_homeMousePressed

    private void enrollMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enrollMouseMoved
        // TODO add your handling code here:
        enroll.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_enrollMouseMoved

    private void enrollMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enrollMouseClicked
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(1);
    }//GEN-LAST:event_enrollMouseClicked

    private void enrollMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enrollMousePressed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(1);
    }//GEN-LAST:event_enrollMousePressed

    private void courseMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_courseMouseMoved
        // TODO add your handling code here:
        course.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_courseMouseMoved

    private void employeeMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_employeeMouseMoved
        // TODO add your handling code here:
        employee.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_employeeMouseMoved

    private void coursesubjectMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_coursesubjectMouseMoved
        // TODO add your handling code here:
         coursesubject.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_coursesubjectMouseMoved

    private void courseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_courseMouseClicked
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_courseMouseClicked

    private void courseMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_courseMousePressed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_courseMousePressed

    private void employeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_employeeMouseClicked
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(6);
    }//GEN-LAST:event_employeeMouseClicked

    private void employeeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_employeeMousePressed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(6);
    }//GEN-LAST:event_employeeMousePressed

    private void coursesubjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_coursesubjectMouseClicked
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(8);
    }//GEN-LAST:event_coursesubjectMouseClicked

    private void coursesubjectMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_coursesubjectMousePressed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(8);
    }//GEN-LAST:event_coursesubjectMousePressed

    private void collegeInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_collegeInsertActionPerformed
        //For Inserting College Record
        String colcode = txt_colcode.getText();
        String colname = txt_colname.getText();

        String empQuery = "SELECT TOP 1 empNo FROM EMPLOYEE ORDER BY loginDate DESC, loginTime DESC";
        String ins = "INSERT INTO COLLEGE VALUES('"+colcode+"','"+colname+"')";
        
        if(colcode.isEmpty() || colname.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill in all the required fields.");
        return; // Exit the method without proceeding further
        }
        
        try{
            pst = adminConnect.prepareStatement(ins);
            pst.execute();
            pst = adminConnect.prepareStatement(empQuery);
            ResultSet rs = pst.executeQuery();
            JOptionPane.showMessageDialog(null,"Record added successfully");
            CollegeTable();
            String username = "SELECT TOP 1 empNo FROM EMPLOYEE ORDER BY loginDate DESC, loginTime DESC";
            pst = adminConnect.prepareStatement(username);
            rs = pst.executeQuery();
        if(!rs.next()){
            JOptionPane.showMessageDialog(null,"error");
            }else{
            String userno = rs.getString("empNo");
            String insertLog = "INSERT INTO EMPLOYEE_LOG VALUES('" + userno + "', 'Inserted " + colcode + " and " + colname + "', default)";
            PreparedStatement insertlogPST = adminConnect.prepareStatement(insertLog);
            insertlogPST.execute();
        }
            txt_colcode.setText("");
            txt_colname.setText("");
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }      
    }//GEN-LAST:event_collegeInsertActionPerformed

    private void collegeUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_collegeUpdateActionPerformed
        //For Updating College Record
        String colcode = txt_colcode.getText();
        String colname = txt_colname.getText();
        String upd = "UPDATE COLLEGE SET colName=? WHERE colcode = '"+colcode+"'";
        
        if(colcode.isEmpty() || colname.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill in all the required fields.");
        return; // Exit the method without proceeding further
        }
        
        try{
            pst = adminConnect.prepareStatement(upd);
            pst.setString(1, colname);
            pst.execute();
            CollegeTable();
            JOptionPane.showMessageDialog(null,"Record update successfully");
            String username = "SELECT TOP 1 empNo FROM EMPLOYEE ORDER BY loginDate DESC, loginTime DESC";
            pst = adminConnect.prepareStatement(username);
            rs = pst.executeQuery();
        if(!rs.next()){
            JOptionPane.showMessageDialog(null,"error");
            }else{
            String userno = rs.getString("empNo");
            String insertLog = "INSERT INTO EMPLOYEE_LOG VALUES('" + userno + "', 'Updated " + colcode + "', default)";
            PreparedStatement insertlogPST = adminConnect.prepareStatement(insertLog);
            insertlogPST.execute();
        }
            txt_colcode.setText("");
            txt_colname.setText("");
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_collegeUpdateActionPerformed

    private void collegeDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_collegeDeleteActionPerformed
        //For Deleting College Record
        String colcode = txt_colcode.getText();
        String colname = txt_colname.getText();
        String del = "DELETE FROM COLLEGE WHERE colcode = '"+colcode+"'";
        
        if(colcode.isEmpty() || colname.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill in all the required fields.");
        return; // Exit the method without proceeding further
        }
        
        try{
            pst = adminConnect.prepareStatement(del);
            pst.execute();
            txt_colcode.setText("");
            txt_colname.setText("");
            CollegeTable();
            JOptionPane.showMessageDialog(null,"Record deleted");
            String username = "SELECT TOP 1 empNo FROM EMPLOYEE ORDER BY loginDate DESC, loginTime DESC";
            pst = adminConnect.prepareStatement(username);
            rs = pst.executeQuery();
        if(!rs.next()){
            JOptionPane.showMessageDialog(null,"error");
            }else{
            String userno = rs.getString("empNo");
            String insertLog = "INSERT INTO EMPLOYEE_LOG VALUES('" + userno + "', 'Deleted " + colcode + "', default)";
            PreparedStatement insertlogPST = adminConnect.prepareStatement(insertLog);
            insertlogPST.execute();
        }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_collegeDeleteActionPerformed

    private void collegeTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_collegeTableMouseClicked
        //For Selecting College Record
        int row = collegeTable.getSelectedRow();
        String click = collegeTable.getModel().getValueAt(row, 0).toString();
        String select = "SELECT * FROM COLLEGE WHERE colcode = '"+click+"'";
        try{
            pst = adminConnect.prepareStatement(select);
            rs = pst.executeQuery();
            if(rs.next()){
                String cc = rs.getString(1);
                txt_colcode.setText(cc);
                String cn = rs.getString(2);
                txt_colname.setText(cn);
            }
            
        }catch(Exception e){
           JOptionPane.showMessageDialog(null,e); 
        }
    }//GEN-LAST:event_collegeTableMouseClicked

    private void txt_searchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchKeyTyped
        //For Searching College Record
        String type = txt_search.getText();
        try{
            String search = "SELECT * FROM COLLEGE WHERE colCode LIKE '%"+type+"%'";
            pst = adminConnect.prepareStatement(search);
            rs = pst.executeQuery();
            collegeTable.setModel(DbUtils.resultSetToTableModel(rs));
            
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_txt_searchKeyTyped

    private void courseInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseInsertActionPerformed
        //For Inserting Course Record
        String coursecode = txt_coursecode.getText();
        String coursedesc = txt_coursedesc.getText();
        String college = txt_college.getText();
        String ins = "INSERT INTO COURSE VALUES('"+coursecode+"','"+coursedesc+"','"+college+"')";
        
        if(coursecode.isEmpty() || coursedesc.isEmpty() || college.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill in all the required fields.");
        return; // Exit the method without proceeding further
        }
        
         try{
            pst = adminConnect.prepareStatement(ins);
            pst.execute();
            JOptionPane.showMessageDialog(null,"Record added successfully");
            CourseTable();
                        String username = "SELECT TOP 1 empNo FROM EMPLOYEE ORDER BY loginDate DESC, loginTime DESC";
            pst = adminConnect.prepareStatement(username);
            rs = pst.executeQuery();
        if(!rs.next()){
            JOptionPane.showMessageDialog(null,"error");
            }else{
            String userno = rs.getString("empNo");
            String insertLog = "INSERT INTO EMPLOYEE_LOG VALUES('" + userno + "', 'Inserted " + coursecode + ", " + coursedesc + ", " + college + "', default)";
            PreparedStatement insertlogPST = adminConnect.prepareStatement(insertLog);
            insertlogPST.execute();
        }
            txt_coursecode.setText("");
            txt_coursedesc.setText("");
            txt_college.setText("");
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
        
    }//GEN-LAST:event_courseInsertActionPerformed

    private void courseUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseUpdateActionPerformed
        // For updating Course record
        String coursecode = txt_coursecode.getText();
        String coursedesc = txt_coursedesc.getText();
        String college = txt_college.getText();
        String upd = "UPDATE COURSE SET coursedesc=?, colcode=? WHERE coursecode = '"+coursecode+"'";
        
        if(coursecode.isEmpty() || coursedesc.isEmpty() || college.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill in all the required fields.");
        return; // Exit the method without proceeding further
        }
        
        try{
            pst = adminConnect.prepareStatement(upd);
            pst.setString(1, coursedesc);
            pst.setString(2, college);
            pst.execute();
            CourseTable();
            JOptionPane.showMessageDialog(null,"Record update successfully");
            String username = "SELECT TOP 1 empNo FROM EMPLOYEE ORDER BY loginDate DESC, loginTime DESC";
            pst = adminConnect.prepareStatement(username);
            rs = pst.executeQuery();
        if(!rs.next()){
            JOptionPane.showMessageDialog(null,"error");
            }else{
            String userno = rs.getString("empNo");
            String insertLog = "INSERT INTO EMPLOYEE_LOG VALUES('" + userno + "', 'Updated " + coursecode + "', default)";
            PreparedStatement insertlogPST = adminConnect.prepareStatement(insertLog);
            insertlogPST.execute();
        }
            txt_coursecode.setText("");
            txt_coursedesc.setText("");
            txt_college.setText("");
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
        
    }//GEN-LAST:event_courseUpdateActionPerformed

    private void courseDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseDeleteActionPerformed
        //For Deleting Course Record
        String coursecode = txt_coursecode.getText();
        String coursedesc = txt_coursedesc.getText();
        String college = txt_college.getText();
        String del = "DELETE FROM COURSE WHERE coursecode = '"+coursecode+"'";
        
        if(coursecode.isEmpty() || coursedesc.isEmpty() || college.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill in all the required fields.");
        return; // Exit the method without proceeding further
        }
        
        try{
            pst = adminConnect.prepareStatement(del);
            pst.execute();
            txt_coursecode.setText("");
            txt_coursedesc.setText("");
            txt_college.setText("");
            String username = "SELECT TOP 1 empNo FROM EMPLOYEE ORDER BY loginDate DESC, loginTime DESC";
            pst = adminConnect.prepareStatement(username);
            rs = pst.executeQuery();
        if(!rs.next()){
            JOptionPane.showMessageDialog(null,"error");
            }else{
            String userno = rs.getString("empNo");
            String insertLog = "INSERT INTO EMPLOYEE_LOG VALUES('" + userno + "', 'Deleted " + coursecode + "', default)";
            PreparedStatement insertlogPST = adminConnect.prepareStatement(insertLog);
            insertlogPST.execute();
        }
            CourseTable();
            JOptionPane.showMessageDialog(null,"Record deleted"); 
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_courseDeleteActionPerformed

    private void txt_search1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_search1KeyTyped
        //For Searching Course Record
        String type = txt_search1.getText();
        try{
            String search = "SELECT * FROM COURSE WHERE coursecode LIKE '%"+type+"%'";
            pst = adminConnect.prepareStatement(search);
            rs = pst.executeQuery();
            courseTable.setModel(DbUtils.resultSetToTableModel(rs));
            
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        
    }//GEN-LAST:event_txt_search1KeyTyped

    private void courseTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_courseTableMouseClicked
        //For Selecting Course Record
         int row = courseTable.getSelectedRow();
        String click = courseTable.getModel().getValueAt(row, 0).toString();
        String select = "SELECT * FROM COURSE WHERE coursecode = '"+click+"'";
        try{
            pst = adminConnect.prepareStatement(select);
            rs = pst.executeQuery();
            if(rs.next()){
                String cc = rs.getString(1);
                txt_coursecode.setText(cc);
                String cd = rs.getString(2);
                txt_coursedesc.setText(cd);
                String col = rs.getString(3);
                txt_college.setText(col);
            }
            
        }catch(Exception e){
           JOptionPane.showMessageDialog(null,e); 
        }

    }//GEN-LAST:event_courseTableMouseClicked

    private void sectionMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sectionMouseMoved
        // TODO add your handling code here:
        section.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_sectionMouseMoved

    private void sectionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sectionMouseClicked
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(3);                                 
    }//GEN-LAST:event_sectionMouseClicked

    private void sectionMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sectionMousePressed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(3);  
    }//GEN-LAST:event_sectionMousePressed

    private void sectionInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sectionInsertActionPerformed
        //For Inserting Section Record
        String section = txt_section.getText();
        String course = txt_course.getText();
        String ins = "INSERT INTO SECTION VALUES('"+section+"','"+course+"')";
        
        if(section.isEmpty() || course.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill in all the required fields.");
        return; // Exit the method without proceeding further
        }
        
        try{
            pst = adminConnect.prepareStatement(ins);
            pst.execute();
            JOptionPane.showMessageDialog(null,"Record added successfully");
            SectionTable();
            String username = "SELECT TOP 1 empNo FROM EMPLOYEE ORDER BY loginDate DESC, loginTime DESC";
            pst = adminConnect.prepareStatement(username);
            rs = pst.executeQuery();
        if(!rs.next()){
            JOptionPane.showMessageDialog(null,"error");
            }else{
            String userno = rs.getString("empNo");
            String insertLog = "INSERT INTO EMPLOYEE_LOG VALUES('" + userno + "', 'Inserted " + section + " and " + course + "', default)";
            PreparedStatement insertlogPST = adminConnect.prepareStatement(insertLog);
            insertlogPST.execute();
        }
            txt_section.setText("");
            txt_course.setText("");
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
        
        
        
    }//GEN-LAST:event_sectionInsertActionPerformed

    private void sectionUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sectionUpdateActionPerformed
        //For Updating Section Record
        String section = txt_section.getText();
        String course = txt_course.getText();
        String upd = "UPDATE SECTION SET coursecode=? WHERE section = '"+section+"'";
        
        if(section.isEmpty() || course.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill in all the required fields.");
        return; // Exit the method without proceeding further
        }
        
        try{
            pst = adminConnect.prepareStatement(upd);
            pst.setString(1, course);
            pst.execute();
            SectionTable();
            JOptionPane.showMessageDialog(null,"Record update successfully");
            String username = "SELECT TOP 1 empNo FROM EMPLOYEE ORDER BY loginDate DESC, loginTime DESC";
            pst = adminConnect.prepareStatement(username);
            rs = pst.executeQuery();
        if(!rs.next()){
            JOptionPane.showMessageDialog(null,"error");
            }else{
            String userno = rs.getString("empNo");
            String insertLog = "INSERT INTO EMPLOYEE_LOG VALUES('" + userno + "', 'Updated " + section + "', default)";
            PreparedStatement insertlogPST = adminConnect.prepareStatement(insertLog);
            insertlogPST.execute();
        }
            txt_section.setText("");
            txt_course.setText("");
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
        
    }//GEN-LAST:event_sectionUpdateActionPerformed

    private void sectionDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sectionDeleteActionPerformed
        //For Deleting Section Record
        String section = txt_section.getText();
        String course = txt_course.getText();
        String del = "DELETE FROM SECTION WHERE section = '"+section+"'";
        
        if(section.isEmpty() || course.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill in all the required fields.");
        return; // Exit the method without proceeding further
        }
        
        try{
            pst = adminConnect.prepareStatement(del);
            pst.execute();
            txt_section.setText("");
            txt_course.setText("");
            String username = "SELECT TOP 1 empNo FROM EMPLOYEE ORDER BY loginDate DESC, loginTime DESC";
            pst = adminConnect.prepareStatement(username);
            rs = pst.executeQuery();
        if(!rs.next()){
            JOptionPane.showMessageDialog(null,"error");
            }else{
            String userno = rs.getString("empNo");
            String insertLog = "INSERT INTO EMPLOYEE_LOG VALUES('" + userno + "', 'Deleted " + section + "', default)";
            PreparedStatement insertlogPST = adminConnect.prepareStatement(insertLog);
            insertlogPST.execute();
        }
            SectionTable();
            JOptionPane.showMessageDialog(null,"Record deleted"); 
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_sectionDeleteActionPerformed

    private void txt_search2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_search2KeyTyped
        //For Searching Section Record
         String type = txt_search2.getText();
        try{
            String search = "SELECT * FROM SECTION WHERE section LIKE '%"+type+"%'";
            pst = adminConnect.prepareStatement(search);
            rs = pst.executeQuery();
            sectionTable.setModel(DbUtils.resultSetToTableModel(rs));
            
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_txt_search2KeyTyped

    private void sectionTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sectionTableMouseClicked
        //For Selecting Section Record
                 int row = sectionTable.getSelectedRow();
        String click = sectionTable.getModel().getValueAt(row, 0).toString();
        String select = "SELECT * FROM SECTION WHERE section = '"+click+"'";
        try{
            pst = adminConnect.prepareStatement(select);
            rs = pst.executeQuery();
            if(rs.next()){
                String sc = rs.getString(1);
                txt_section.setText(sc);
                String cc = rs.getString(2);
                txt_course.setText(cc);
            }
            
        }catch(Exception e){
           JOptionPane.showMessageDialog(null,e); 
        }
    }//GEN-LAST:event_sectionTableMouseClicked

    private void studentUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentUpdateActionPerformed
        //For Updating Student Record
        String studno = txt_studno.getText();
        String lname = txt_lname.getText();
        String fname = txt_fname.getText();
        String mname = txt_mname.getText();
        String gender = txt_gender.getText();
        String bdate = txt_bdate.getText();
        String street = txt_street.getText();
        String brgy = txt_brgy.getText();
        String city = txt_city.getText();
        String province = txt_province.getText();
        String postal = txt_postal.getText();
        String enrolled = txt_enrolled.getText();
        String upd = "UPDATE STUDENT SET lname=?, fname=?, mname=?, gender=?, bdate=?, street=?,"
                + "brgy=?, city=?, province=?, postal_code=? WHERE studentNo = '"+studno+"'";
        if(studno.isEmpty() || lname.isEmpty() || fname.isEmpty() || mname.isEmpty() || gender.isEmpty() || bdate.isEmpty() ||
                street.isEmpty() || brgy.isEmpty() || city.isEmpty() || province.isEmpty() || postal.isEmpty() || enrolled.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill in all the required fields.");
        return; // Exit the method without proceeding further
        }
        try{
            pst = adminConnect.prepareStatement(upd);
            pst.setString(1, lname);
            pst.setString(2, fname);
            pst.setString(3, mname);
            pst.setString(4, gender);
            pst.setString(5, bdate);
            pst.setString(6, street);
            pst.setString(7, brgy);
            pst.setString(8, city);
            pst.setString(9, province);
            pst.setString(10, postal);
            pst.execute();
            StudentTable();
            JOptionPane.showMessageDialog(null,"Record update successfully");
            String username = "SELECT TOP 1 empNo FROM EMPLOYEE ORDER BY loginDate DESC, loginTime DESC";
            pst = adminConnect.prepareStatement(username);
            rs = pst.executeQuery();
        if(!rs.next()){
            JOptionPane.showMessageDialog(null,"error");
            }else{
            String userno = rs.getString("empNo");
            String insertLog = "INSERT INTO EMPLOYEE_LOG VALUES('" + userno + "', 'Updated " + studno + "', default)";
            PreparedStatement insertlogPST = adminConnect.prepareStatement(insertLog);
            insertlogPST.execute();
        }
            txt_studno.setText("");
            txt_lname.setText("");
            txt_fname.setText("");
            txt_mname.setText("");
            txt_gender.setText("");
            txt_bdate.setText("");
            txt_street.setText("");
            txt_brgy.setText("");
            txt_city.setText("");
            txt_province.setText("");
            txt_postal.setText("");
            txt_enrolled.setText("");
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
        
    }//GEN-LAST:event_studentUpdateActionPerformed

    private void studentDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentDeleteActionPerformed
        //For Deleting Student Record
        String studno = txt_studno.getText();
        String lname = txt_lname.getText();
        String fname = txt_fname.getText();
        String mname = txt_mname.getText();
        String gender = txt_gender.getText();
        String bdate = txt_bdate.getText();
        String street = txt_street.getText();
        String brgy = txt_brgy.getText();
        String city = txt_city.getText();
        String province = txt_province.getText();
        String postal = txt_postal.getText();
        String enrolled = txt_enrolled.getText();
        String del = "DELETE FROM STUDENT WHERE studentNo = '"+studno+"'";
        if(studno.isEmpty() || lname.isEmpty() || fname.isEmpty() || mname.isEmpty() || gender.isEmpty() || bdate.isEmpty() ||
                street.isEmpty() || brgy.isEmpty() || city.isEmpty() || province.isEmpty() || postal.isEmpty() || enrolled.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill in all the required fields.");
        return; // Exit the method without proceeding further
        }
        try{
            pst = adminConnect.prepareStatement(del);
            pst.execute();
            txt_studno.setText("");
            txt_lname.setText("");
            txt_fname.setText("");
            txt_mname.setText("");
            txt_gender.setText("");
            txt_bdate.setText("");
            txt_street.setText("");
            txt_brgy.setText("");
            txt_city.setText("");
            txt_province.setText("");
            txt_postal.setText("");
            txt_enrolled.setText("");
            String username = "SELECT TOP 1 empNo FROM EMPLOYEE ORDER BY loginDate DESC, loginTime DESC";
            pst = adminConnect.prepareStatement(username);
            rs = pst.executeQuery();
        if(!rs.next()){
            JOptionPane.showMessageDialog(null,"error");
            }else{
            String userno = rs.getString("empNo");
            String insertLog = "INSERT INTO EMPLOYEE_LOG VALUES('" + userno + "', 'Deleted " + studno + "', default)";
            PreparedStatement insertlogPST = adminConnect.prepareStatement(insertLog);
            insertlogPST.execute();
        }
            StudentTable();
            JOptionPane.showMessageDialog(null,"Record deleted"); 
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
        
    }//GEN-LAST:event_studentDeleteActionPerformed

    private void txt_search3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_search3KeyTyped
         //For Searching Student Record
         String type = txt_search3.getText();
        try{
            String search = "SELECT studentno,lname,fname,mname,gender,bdate,street,brgy,city,province,postal_code,dateenrolled FROM STUDENT WHERE lname LIKE '%"+type+"%'";
            pst = adminConnect.prepareStatement(search);
            rs = pst.executeQuery();
            studentTable.setModel(DbUtils.resultSetToTableModel(rs));
            
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_txt_search3KeyTyped

    private void studentMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentMouseMoved
        // TODO add your handling code here:
        student.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_studentMouseMoved

    private void studentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentMouseClicked
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(4);  
    }//GEN-LAST:event_studentMouseClicked

    private void studentMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentMousePressed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(4);  
    }//GEN-LAST:event_studentMousePressed

    private void studentTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentTableMouseClicked
        //For Selecting Student Record
        int row = studentTable.getSelectedRow();
        String click = studentTable.getModel().getValueAt(row, 0).toString();
        String select = "SELECT * FROM STUDENT WHERE studentNo = '"+click+"'";
        try{
            pst = adminConnect.prepareStatement(select);
            rs = pst.executeQuery();
            if(rs.next()){
                String sn = rs.getString(1);
                txt_studno.setText(sn);
                String ln = rs.getString(2);
                txt_lname.setText(ln);
                String fn = rs.getString(3);
                txt_fname.setText(fn);
                String mn = rs.getString(4);
                txt_mname.setText(mn);
                String gd = rs.getString(5);
                txt_gender.setText(gd);
                String bd = rs.getString(6);
                txt_bdate.setText(bd);
                String st = rs.getString(7);
                txt_street.setText(st);
                String br = rs.getString(8);
                txt_brgy.setText(br);
                String ct = rs.getString(9);
                txt_city.setText(ct);
                String pr = rs.getString(10);
                txt_province.setText(pr);
                String pc = rs.getString(11);
                txt_postal.setText(pc);
                String de = rs.getString(12);
                txt_enrolled.setText(de);
                        
            }
            
        }catch(Exception e){
           JOptionPane.showMessageDialog(null,e); 
        }
    }//GEN-LAST:event_studentTableMouseClicked

    private void registrationUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrationUpdateActionPerformed
        //For Udating Registration Record
        String student = txt_student.getText();
        String sec = txt_sec.getText();
        String upd = "UPDATE REGISTRATION SET section=? WHERE studentNo = '"+student+"'";
        if(student.isEmpty() || sec.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill in all the required fields.");
        return; // Exit the method without proceeding further
        }
        try{
            pst = adminConnect.prepareStatement(upd);
            pst.setString(1, sec);
            pst.execute();
            RegistrationTable();
            JOptionPane.showMessageDialog(null,"Record update successfully");
                        String username = "SELECT TOP 1 empNo FROM EMPLOYEE ORDER BY loginDate DESC, loginTime DESC";
            pst = adminConnect.prepareStatement(username);
            rs = pst.executeQuery();
        if(!rs.next()){
            JOptionPane.showMessageDialog(null,"error");
            }else{
            String userno = rs.getString("empNo");
            String insertLog = "INSERT INTO EMPLOYEE_LOG VALUES('" + userno + "', 'Updated " + student + "', default)";
            PreparedStatement insertlogPST = adminConnect.prepareStatement(insertLog);
            insertlogPST.execute();
        }
            txt_student.setText("");
            txt_sec.setText("");
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_registrationUpdateActionPerformed

    private void registrationDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrationDeleteActionPerformed
        //For Deleting Registration Record
        String student = txt_student.getText();
        String sec = txt_sec.getText();
        String del = "DELETE FROM REGISTRATION WHERE studentNo = '"+student+"'";
        if(student.isEmpty() || sec.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill in all the required fields.");
        return; // Exit the method without proceeding further
        }
         try{
            pst = adminConnect.prepareStatement(del);
            pst.execute();
            txt_student.setText("");
            txt_sec.setText("");
            String username = "SELECT TOP 1 empNo FROM EMPLOYEE ORDER BY loginDate DESC, loginTime DESC";
            pst = adminConnect.prepareStatement(username);
            rs = pst.executeQuery();
        if(!rs.next()){
            JOptionPane.showMessageDialog(null,"error");
            }else{
            String userno = rs.getString("empNo");
            String insertLog = "INSERT INTO EMPLOYEE_LOG VALUES('" + userno + "', 'Deleted " + student + "', default)";
            PreparedStatement insertlogPST = adminConnect.prepareStatement(insertLog);
            insertlogPST.execute();
        }
            RegistrationTable();
            JOptionPane.showMessageDialog(null,"Record deleted"); 
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_registrationDeleteActionPerformed

    private void txt_search4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_search4KeyTyped
        //For Searching Registration Record
        String type = txt_search4.getText();
        try{
            String search = "SELECT * FROM REGISTRATION WHERE studentNo LIKE '%"+type+"%'";
            pst = adminConnect.prepareStatement(search);
            rs = pst.executeQuery();
            registrationTable.setModel(DbUtils.resultSetToTableModel(rs));
            
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_txt_search4KeyTyped

    private void registrationTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registrationTableMouseClicked
        //For Selecting Registration Record
        int row = registrationTable.getSelectedRow();
        String click = registrationTable.getModel().getValueAt(row, 1).toString();
        String select = "SELECT * FROM REGISTRATION WHERE studentNo = '"+click+"'";
        try{
            pst = adminConnect.prepareStatement(select);
            rs = pst.executeQuery();
            if(rs.next()){
                String stud = rs.getString(2);
                txt_student.setText(stud);
                String sec = rs.getString(3);
                txt_sec.setText(sec);
            }
            
        }catch(Exception e){
           JOptionPane.showMessageDialog(null,e); 
        }
    }//GEN-LAST:event_registrationTableMouseClicked

    private void employeeDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeeDeleteActionPerformed
        //For Deleting Employee Record
        String empno = txt_empno.getText();
        String lname = txt_lname1.getText();
        String fname = txt_fname1.getText();
        String mname = txt_mname1.getText();
        String emprank = txt_emprank.getText();
        String pos = txt_pos.getText();
        String bdate = txt_bdate1.getText();
        String email = txt_email.getText();
        String del = "DELETE FROM EMPLOYEE WHERE empNo = '"+empno+"'";
        if(empno.isEmpty() || lname.isEmpty() || fname.isEmpty() || mname.isEmpty() || emprank.isEmpty() || pos.isEmpty() ||
                bdate.isEmpty() || email.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill in all the required fields.");
        return; // Exit the method without proceeding further
        }
        try{
            pst = adminConnect.prepareStatement(del);
            pst.execute();
            txt_empno.setText("");
            txt_lname1.setText("");
            txt_fname1.setText("");
            txt_mname1.setText("");
            txt_emprank.setText("");
            txt_pos.setText("");
            txt_bdate1.setText("");
            txt_email.setText("");
            String username = "SELECT TOP 1 empNo FROM EMPLOYEE ORDER BY loginDate DESC, loginTime DESC";
            pst = adminConnect.prepareStatement(username);
            rs = pst.executeQuery();
        if(!rs.next()){
            JOptionPane.showMessageDialog(null,"error");
            }else{
            String userno = rs.getString("empNo");
            String insertLog = "INSERT INTO EMPLOYEE_LOG VALUES('" + userno + "', 'Deleted " + empno + "', default)";
            PreparedStatement insertlogPST = adminConnect.prepareStatement(insertLog);
            insertlogPST.execute();
        }
            EmployeeTable();
            JOptionPane.showMessageDialog(null,"Record deleted"); 
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
        
    }//GEN-LAST:event_employeeDeleteActionPerformed

    private void employeeUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeeUpdateActionPerformed
        //For Updating Employee Record
        String empno = txt_empno.getText();
        String lname = txt_lname1.getText();
        String fname = txt_fname1.getText();
        String mname = txt_mname1.getText();
        String emprank = txt_emprank.getText();
        String pos = txt_pos.getText();
        String bdate = txt_bdate1.getText();
        String email = txt_email.getText();
        String upd = "UPDATE EMPLOYEE SET lname=?, fname=?, mname=?, empRank=?, Position=?, bDate=?, email=? WHERE empNo = '"+empno+"'";
        if(empno.isEmpty() || lname.isEmpty() || fname.isEmpty() || mname.isEmpty() || emprank.isEmpty() || pos.isEmpty() ||
                bdate.isEmpty() || email.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill in all the required fields.");
        return; // Exit the method without proceeding further
        }
        try{
            pst = adminConnect.prepareStatement(upd);
            pst.setString(1, lname);
            pst.setString(2, fname);
            pst.setString(3, mname);
            pst.setString(4, emprank);
            pst.setString(5, pos);
            pst.setString(6, bdate);
            pst.setString(7, email);
            pst.execute();
            EmployeeTable();
            JOptionPane.showMessageDialog(null,"Record update successfully");
            String username = "SELECT TOP 1 empNo FROM EMPLOYEE ORDER BY loginDate DESC, loginTime DESC";
            pst = adminConnect.prepareStatement(username);
            rs = pst.executeQuery();
        if(!rs.next()){
            JOptionPane.showMessageDialog(null,"error");
            }else{
            String userno = rs.getString("empNo");
            String insertLog = "INSERT INTO EMPLOYEE_LOG VALUES('" + userno + "', 'Updated " + empno + "', default)";
            PreparedStatement insertlogPST = adminConnect.prepareStatement(insertLog);
            insertlogPST.execute();
        }
            txt_empno.setText("");
            txt_lname1.setText("");
            txt_fname1.setText("");
            txt_mname1.setText("");
            txt_emprank.setText("");
            txt_pos.setText("");
            txt_bdate1.setText("");
            txt_email.setText("");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
        
    }//GEN-LAST:event_employeeUpdateActionPerformed

    private void txt_search5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_search5KeyTyped
        //For Searching Employee Record
                String type = txt_search5.getText();
        try{
            String search = "SELECT empNo, lname, fname, mname, empRank, Position, bDate, email FROM EMPLOYEE WHERE lname LIKE '%"+type+"%'";
            pst = adminConnect.prepareStatement(search);
            rs = pst.executeQuery();
            employeeTable.setModel(DbUtils.resultSetToTableModel(rs));

        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_txt_search5KeyTyped

    private void employeeTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_employeeTableMouseClicked
        //For Selecting Employee Record
        int row = employeeTable.getSelectedRow();
        String click = employeeTable.getModel().getValueAt(row, 0).toString();
        String select = "SELECT * FROM EMPLOYEE WHERE empNo = '"+click+"'";
        try{
            pst = adminConnect.prepareStatement(select);
            rs = pst.executeQuery();
            if(rs.next()){
                String emp = rs.getString(1);
                txt_empno.setText(emp);
                String ln = rs.getString(2);
                txt_lname1.setText(ln);
                String fn = rs.getString(3);
                txt_fname1.setText(fn);
                String mn = rs.getString(4);
                txt_mname1.setText(mn);
                String er = rs.getString(5);
                txt_emprank.setText(er);
                String ps = rs.getString(6);
                txt_pos.setText(ps);
                String bd = rs.getString(7);
                txt_bdate1.setText(bd);
                String em = rs.getString(8);
                txt_email.setText(em);
            }
            
        }catch(Exception e){
           JOptionPane.showMessageDialog(null,e); 
        }
    }//GEN-LAST:event_employeeTableMouseClicked

    private void employeeInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeeInsertActionPerformed
        //For Inserting Employee Record
        String empno = txt_empno.getText();
        String lname = txt_lname1.getText();
        String fname = txt_fname1.getText();
        String mname = txt_mname1.getText();
        String emprank = txt_emprank.getText();
        String pos = txt_pos.getText();
        String bdate = txt_bdate1.getText();
        String email = txt_email.getText();
        String pass = "adminConfig";
        String stat = "Active";
        String defaultdate = "";
        String defaulttime = "";
        
        String ins = "INSERT INTO EMPLOYEE VALUES('"+empno+"','"+lname+"','"+fname+"','"+mname+"','"+emprank+"','"+pos+"','"+bdate+"','"+email+"','"+pass+"','"+stat+"','"+defaultdate+"','"+defaulttime+"')";  
        if(empno.isEmpty() || lname.isEmpty() || fname.isEmpty() || mname.isEmpty() || emprank.isEmpty() || pos.isEmpty() ||
                bdate.isEmpty() || email.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill in all the required fields.");
        return; // Exit the method without proceeding further
        }     
        try{
            pst = adminConnect.prepareStatement(ins);
            pst.execute();
            JOptionPane.showMessageDialog(null,"Record added successfully");
            String username = "SELECT TOP 1 empNo FROM EMPLOYEE ORDER BY loginDate DESC, loginTime DESC";
            pst = adminConnect.prepareStatement(username);
            rs = pst.executeQuery();
        if(!rs.next()){
            JOptionPane.showMessageDialog(null,"error");
            }else{
            String userno = rs.getString("empNo");
            String insertLog = "INSERT INTO EMPLOYEE_LOG VALUES('" + userno + "', 'Inserted new Employee', default)";
            PreparedStatement insertlogPST = adminConnect.prepareStatement(insertLog);
            insertlogPST.execute();
        }
            EmployeeTable();
            txt_section.setText("");
            txt_course.setText("");
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_employeeInsertActionPerformed

    private void subjectMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subjectMouseMoved
        // TODO add your handling code here:
         subject.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_subjectMouseMoved

    private void subjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subjectMouseClicked
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(7);
    }//GEN-LAST:event_subjectMouseClicked

    private void subjectMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subjectMousePressed
        // TODO add your handling code here:
         jTabbedPane1.setSelectedIndex(7);
    }//GEN-LAST:event_subjectMousePressed

    private void subjectInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectInsertActionPerformed
        //For Inserting Subject Record
        String subj = txt_subj.getText();
        String title = txt_title.getText();
        String lec = txt_lec.getText();
        String lab = txt_lab.getText();
        String emp = txt_emp.getText();
        String ins = "INSERT INTO SUBJECT VALUES('"+subj+"','"+title+"','"+lec+"','"+lab+"','"+emp+"')";  
        if(subj.isEmpty() || title.isEmpty() || lec.isEmpty() || lab.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill in all the required fields.");
        return; // Exit the method without proceeding further
        }     
        try{
            pst = adminConnect.prepareStatement(ins);
            pst.execute();
            JOptionPane.showMessageDialog(null,"Record added successfully");
            String username = "SELECT TOP 1 empNo FROM EMPLOYEE ORDER BY loginDate DESC, loginTime DESC";
            pst = adminConnect.prepareStatement(username);
            rs = pst.executeQuery();
        if(!rs.next()){
            JOptionPane.showMessageDialog(null,"error");
            }else{
            String userno = rs.getString("empNo");
            String insertLog = "INSERT INTO EMPLOYEE_LOG VALUES('" + userno + "', 'Inserted " + subj + " and " + title + "', default)";
            PreparedStatement insertlogPST = adminConnect.prepareStatement(insertLog);
            insertlogPST.execute();
        }
            SubjectTable();
            txt_subj.setText("");
            txt_title.setText("");
            txt_lec.setText("");
            txt_lab.setText("");
            txt_emp.setText("");
           
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_subjectInsertActionPerformed

    private void subjectUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectUpdateActionPerformed
        //For Updating Subject Record
        String subj = txt_subj.getText();
        String title = txt_title.getText();
        String lec = txt_lec.getText();
        String lab = txt_lab.getText();
        String emp = txt_emp.getText();
        String upd = "UPDATE SUBJECT SET subjTitle=?, lec=?, lab=?, empNo=? WHERE subjCode = '"+subj+"'";
         if(subj.isEmpty() || title.isEmpty() || lec.isEmpty() || lab.isEmpty() || emp.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill in all the required fields.");
        return; // Exit the method without proceeding further
        }   
        try{
            pst = adminConnect.prepareStatement(upd);
            pst.setString(1, title);
            pst.setString(2, lec);
            pst.setString(3, lab);
            pst.setString(4, emp);
            pst.execute();
            SubjectTable();
            JOptionPane.showMessageDialog(null,"Record update successfully");
            String username = "SELECT TOP 1 empNo FROM EMPLOYEE ORDER BY loginDate DESC, loginTime DESC";
            pst = adminConnect.prepareStatement(username);
            rs = pst.executeQuery();
        if(!rs.next()){
            JOptionPane.showMessageDialog(null,"error");
            }else{
            String userno = rs.getString("empNo");
            String insertLog = "INSERT INTO EMPLOYEE_LOG VALUES('" + userno + "', 'Updated " + subj + "', default)";
            PreparedStatement insertlogPST = adminConnect.prepareStatement(insertLog);
            insertlogPST.execute();
        }
            txt_subj.setText("");
            txt_title.setText("");
            txt_lec.setText("");
            txt_lab.setText("");
            txt_emp.setText("");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_subjectUpdateActionPerformed

    private void subjectDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectDeleteActionPerformed
        //For Deleting Subject Record
        String subj = txt_subj.getText();
        String title = txt_title.getText();
        String lec = txt_lec.getText();
        String lab = txt_lab.getText();
        String emp = txt_emp.getText();
        String del = "DELETE FROM SUBJECT WHERE subjCode = '"+subj+"'";
        if(subj.isEmpty() || title.isEmpty() || lec.isEmpty() || lab.isEmpty() || emp.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill in all the required fields.");
        return; // Exit the method without proceeding further
        }   
        try{
            pst = adminConnect.prepareStatement(del);
            pst.execute();
            txt_subj.setText("");
            txt_title.setText("");
            txt_lec.setText("");
            txt_lab.setText("");
            txt_emp.setText("");
            String username = "SELECT TOP 1 empNo FROM EMPLOYEE ORDER BY loginDate DESC, loginTime DESC";
            pst = adminConnect.prepareStatement(username);
            rs = pst.executeQuery();
        if(!rs.next()){
            JOptionPane.showMessageDialog(null,"error");
            }else{
            String userno = rs.getString("empNo");
            String insertLog = "INSERT INTO EMPLOYEE_LOG VALUES('" + userno + "', 'Deleted " + subj + "', default)";
            PreparedStatement insertlogPST = adminConnect.prepareStatement(insertLog);
            insertlogPST.execute();
        }
            SubjectTable();
            JOptionPane.showMessageDialog(null,"Record deleted"); 
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_subjectDeleteActionPerformed

    private void txt_search6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_search6KeyTyped
        //For Searching Subject Record
         String type = txt_search6.getText();
        try{
            String search = "SELECT * FROM SUBJECT WHERE subjTitle LIKE '%"+type+"%'";
            pst = adminConnect.prepareStatement(search);
            rs = pst.executeQuery();
            subjectTable.setModel(DbUtils.resultSetToTableModel(rs));

        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_txt_search6KeyTyped

    private void subjectTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subjectTableMouseClicked
        //For Selecting Record
        int row = subjectTable.getSelectedRow();
        String click = subjectTable.getModel().getValueAt(row, 0).toString();
        String select = "SELECT * FROM SUBJECT WHERE subjCode = '"+click+"'";
        try{
            pst = adminConnect.prepareStatement(select);
            rs = pst.executeQuery();
            if(rs.next()){
                String sub = rs.getString(1);
                txt_subj.setText(sub);
                String tl = rs.getString(2);
                txt_title.setText(tl);
                String lc = rs.getString(3);
                txt_lec.setText(lc);
                String lb = rs.getString(4);
                txt_lab.setText(lb);
                String empl = rs.getString(5);
                txt_emp.setText(empl);
            }
            
        }catch(Exception e){
           JOptionPane.showMessageDialog(null,e); 
        }
    }//GEN-LAST:event_subjectTableMouseClicked

    private void coursesubInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coursesubInsertActionPerformed
        //For Inserting Course Subject Record
        String sect = txt_sect.getText();
        String sub = txt_sub.getText();
        String yr = txt_yr.getText();
        String sem = txt_sem.getText();
        String ins = "INSERT INTO COURSESUBJECT VALUES('"+sect+"','"+sub+"','"+yr+"','"+sem+"')";
        if(sect.isEmpty() || sub.isEmpty() || yr.isEmpty() || sem.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill in all the required fields.");
        return; // Exit the method without proceeding further
        }     
        try{
            pst = adminConnect.prepareStatement(ins);
            pst.execute();
            JOptionPane.showMessageDialog(null,"Record added successfully");
            String username = "SELECT TOP 1 empNo FROM EMPLOYEE ORDER BY loginDate DESC, loginTime DESC";
            pst = adminConnect.prepareStatement(username);
            rs = pst.executeQuery();
        if(!rs.next()){
            JOptionPane.showMessageDialog(null,"error");
            }else{
            String userno = rs.getString("empNo");
            String insertLog = "INSERT INTO EMPLOYEE_LOG VALUES('" + userno + "', 'Inserted new Course Subject', default)";
            PreparedStatement insertlogPST = adminConnect.prepareStatement(insertLog);
            insertlogPST.execute();
        }
            CourseSubTable();
            txt_sect.setText("");
            txt_sub.setText("");
            txt_yr.setText("");
            txt_sem.setText("");
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        } 
    }//GEN-LAST:event_coursesubInsertActionPerformed

    private void coursesubUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coursesubUpdateActionPerformed
        //For Updating Course Subject Record
        String sect = txt_sect.getText();
        String sub = txt_sub.getText();
        String yr = txt_yr.getText();
        String sem = txt_sem.getText();
        String upd = "UPDATE COURSESUBJECT SET section=?, subjCode=?, YrLevel=?, Semester=? WHERE section = '"+sect+"'";
        if(sect.isEmpty() || sub.isEmpty() || yr.isEmpty() || sem.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill in all the required fields.");
        return; // Exit the method without proceeding further
        }     
        try{
            pst = adminConnect.prepareStatement(upd);
            pst.setString(1, sect);
            pst.setString(2, sub);
            pst.setString(3, yr);
            pst.setString(4, sem);
            pst.execute();
            CourseSubTable();
            JOptionPane.showMessageDialog(null,"Record update successfully");
            String username = "SELECT TOP 1 empNo FROM EMPLOYEE ORDER BY loginDate DESC, loginTime DESC";
            pst = adminConnect.prepareStatement(username);
            rs = pst.executeQuery();
        if(!rs.next()){
            JOptionPane.showMessageDialog(null,"error");
            }else{
            String userno = rs.getString("empNo");
            String insertLog = "INSERT INTO EMPLOYEE_LOG VALUES('" + userno + "', 'Updated a Course Subject', default)";
            PreparedStatement insertlogPST = adminConnect.prepareStatement(insertLog);
            insertlogPST.execute();
        }
            txt_sect.setText("");
            txt_sub.setText("");
            txt_yr.setText("");
            txt_sem.setText("");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_coursesubUpdateActionPerformed

    private void coursesubDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coursesubDeleteActionPerformed
        //For Deleting Course Subject Record
        String sect = txt_sect.getText();
        String sub = txt_sub.getText();
        String yr = txt_yr.getText();
        String sem = txt_sem.getText();
        String del = "DELETE FROM COURSESUBJECT WHERE section = '"+sect+"' AND subjcode = '"+sub+"'";
        if(sect.isEmpty() || sub.isEmpty() || yr.isEmpty() || sem.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill in all the required fields.");
        return; // Exit the method without proceeding further
        }     
        try{
            pst = adminConnect.prepareStatement(del);
            pst.execute();
            txt_sect.setText("");
            txt_sub.setText("");
            txt_yr.setText("");
            txt_sem.setText("");
            String username = "SELECT TOP 1 empNo FROM EMPLOYEE ORDER BY loginDate DESC, loginTime DESC";
            pst = adminConnect.prepareStatement(username);
            rs = pst.executeQuery();
        if(!rs.next()){
            JOptionPane.showMessageDialog(null,"error");
            }else{
            String userno = rs.getString("empNo");
            String insertLog = "INSERT INTO EMPLOYEE_LOG VALUES('" + userno + "', 'Deleted a Course Subject', default)";
            PreparedStatement insertlogPST = adminConnect.prepareStatement(insertLog);
            insertlogPST.execute();
        }
            CourseSubTable();
            JOptionPane.showMessageDialog(null,"Record deleted"); 
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_coursesubDeleteActionPerformed

    private void txt_search7KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_search7KeyTyped
        //For Searching Course Subject Record
        String type = txt_search7.getText();
        try{
            String search = "SELECT * FROM COURSESUBJECT WHERE section LIKE '%"+type+"%'";
            pst = adminConnect.prepareStatement(search);
            rs = pst.executeQuery();
            coursesubTable.setModel(DbUtils.resultSetToTableModel(rs));

        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_txt_search7KeyTyped

    private void coursesubTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_coursesubTableMouseClicked
        //For Selecting Course Subject Record
        int row = coursesubTable.getSelectedRow();
        String click = coursesubTable.getModel().getValueAt(row, 1).toString();
        String select = "SELECT * FROM COURSESUBJECT WHERE subjCode = '"+click+"'";
        try{
            pst = adminConnect.prepareStatement(select);
            rs = pst.executeQuery();
            if(rs.next()){
                String section = rs.getString(1);
                txt_sect.setText(section);
                String subj = rs.getString(2);
                txt_sub.setText(subj);
                String yrlvl = rs.getString(3);
                txt_yr.setText(yrlvl);
                String semester = rs.getString(4);
                txt_sem.setText(semester);
            }
            
        }catch(Exception e){
           JOptionPane.showMessageDialog(null,e); 
        }
    }//GEN-LAST:event_coursesubTableMouseClicked

    private void registrationMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registrationMouseMoved
        // TODO add your handling code here:
        registration.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_registrationMouseMoved

    private void registrationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registrationMouseClicked
        // TODO add your handling code here:
                jTabbedPane1.setSelectedIndex(5);
    }//GEN-LAST:event_registrationMouseClicked

    private void registrationMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registrationMousePressed
        // TODO add your handling code here:
                jTabbedPane1.setSelectedIndex(5);
    }//GEN-LAST:event_registrationMousePressed

    private void registeredlistMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registeredlistMouseMoved
        // TODO add your handling code here:
        registeredlist.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_registeredlistMouseMoved

    private void registeredlistMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registeredlistMouseClicked
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(9);
    }//GEN-LAST:event_registeredlistMouseClicked

    private void registeredlistMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registeredlistMousePressed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(9);

    }//GEN-LAST:event_registeredlistMousePressed

    private void studentAccountsMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentAccountsMouseMoved
        // TODO add your handling code here:
         studentAccounts.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_studentAccountsMouseMoved

    private void studentAccountsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentAccountsMouseClicked
        // TODO add your handling code here:
         jTabbedPane1.setSelectedIndex(10);
    }//GEN-LAST:event_studentAccountsMouseClicked

    private void studentAccountsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentAccountsMousePressed
        // TODO add your handling code here:
         jTabbedPane1.setSelectedIndex(10);

    }//GEN-LAST:event_studentAccountsMousePressed

    private void employeeAccountsMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_employeeAccountsMouseMoved
        // TODO add your handling code here:
        employeeAccounts.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_employeeAccountsMouseMoved

    private void employeeAccountsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_employeeAccountsMouseClicked
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(11);
    }//GEN-LAST:event_employeeAccountsMouseClicked

    private void employeeAccountsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_employeeAccountsMousePressed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(11);
    }//GEN-LAST:event_employeeAccountsMousePressed

    private void txt_search8KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_search8KeyTyped
        //For Searching Registered Record
        String type = txt_search8.getText();
        try{
            String search = "SELECT reg.registrationNo, stud.studentNo, stud.fName + ' ' + stud.lName AS 'Student Name', col.colName, crs.courseDesc, cs.yrlevel, sec.section, cs.semester, cs.subjCode, sub.subjTitle" +
"            FROM REGISTRATION AS reg" +
"            INNER JOIN STUDENT AS stud ON reg.StudentNo = stud.StudentNo " +
"            INNER JOIN SECTION AS sec ON reg.Section = sec.Section " +
"            INNER JOIN COURSE AS crs ON sec.CourseCode = crs.CourseCode " +
"            INNER JOIN COLLEGE AS col ON crs.colCode = col.colCode " +
"            INNER JOIN COURSESUBJECT AS cs ON sec.Section = cs.Section " +
"            INNER JOIN SUBJECT AS sub ON cs.subjCode = sub.subjCode WHERE cs.yrlevel LIKE '%"+type+"%'";
            pst = adminConnect.prepareStatement(search);
            rs = pst.executeQuery();
            registeredListTable.setModel(DbUtils.resultSetToTableModel(rs));

        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_txt_search8KeyTyped

    private void studentAccUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentAccUpdateActionPerformed
        //For Updating Student Account Status
        String studacc = txt_studacc.getText();
        String studstat = txt_studstat.getText();
        String upd = "UPDATE STUDENT SET stat=? WHERE studentNo = '"+studacc+"'";
        if(studacc.isEmpty() || studstat.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill in all the required fields.");
        return; // Exit the method without proceeding further
        }     
        try{
            pst = adminConnect.prepareStatement(upd);
            pst.setString(1, studstat);
            pst.execute();
            StudentAccounts();
            JOptionPane.showMessageDialog(null,"Record update successfully");
            String username = "SELECT TOP 1 empNo FROM EMPLOYEE ORDER BY loginDate DESC, loginTime DESC";
            pst = adminConnect.prepareStatement(username);
            rs = pst.executeQuery();
        if(!rs.next()){
            JOptionPane.showMessageDialog(null,"error");
            }else{
            String userno = rs.getString("empNo");
            String insertLog = "INSERT INTO EMPLOYEE_LOG VALUES('" + userno + "', 'Updated " + studacc + "', default)";
            PreparedStatement insertlogPST = adminConnect.prepareStatement(insertLog);
            insertlogPST.execute();
        }
            txt_studacc.setText("");
            txt_studstat.setText("");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_studentAccUpdateActionPerformed

    private void txt_search9KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_search9KeyTyped
        //For Searching Student Account Records
        String type = txt_search9.getText();
        try{
            String search = "SELECT studentNo, fName+ ' '+lName AS 'Student Name', email, stat, loginDate, loginTime FROM STUDENT WHERE stat LIKE '%"+type+"%'";
            pst = adminConnect.prepareStatement(search);
            rs = pst.executeQuery();
            studentAccountsTable.setModel(DbUtils.resultSetToTableModel(rs));

        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_txt_search9KeyTyped

    private void studentAccountsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentAccountsTableMouseClicked
        //For Selecting Student Account Records
        int row = studentAccountsTable.getSelectedRow();
        String click = studentAccountsTable.getModel().getValueAt(row, 0).toString();
        String select = "SELECT studentNo, stat FROM STUDENT WHERE studentNo = '"+click+"'";
        try{
            pst = adminConnect.prepareStatement(select);
            rs = pst.executeQuery();
            if(rs.next()){
                String studacc = rs.getString(1);
                txt_studacc.setText(studacc);
                String studstat = rs.getString(2);
                txt_studstat.setText(studstat);
            }
            
        }catch(Exception e){
           JOptionPane.showMessageDialog(null,e); 
        }
    }//GEN-LAST:event_studentAccountsTableMouseClicked

    private void employeeAccUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeeAccUpdateActionPerformed
        //For Updating Employee Account Record
        String empacc = txt_empacc.getText();
        String empstat = txt_empstat.getText();
        String upd = "UPDATE EMPLOYEE SET stat=? WHERE empNo = '"+empacc+"'";
        if(empacc.isEmpty() || empstat.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill in all the required fields.");
        return; // Exit the method without proceeding further
        }     
        try{
            pst = adminConnect.prepareStatement(upd);
            pst.setString(1, empstat);
            pst.execute();
            EmployeeAccounts();
            JOptionPane.showMessageDialog(null,"Record update successfully");
            String username = "SELECT TOP 1 empNo FROM EMPLOYEE ORDER BY loginDate DESC, loginTime DESC";
            pst = adminConnect.prepareStatement(username);
            rs = pst.executeQuery();
        if(!rs.next()){
            JOptionPane.showMessageDialog(null,"error");
            }else{
            String userno = rs.getString("empNo");
            String insertLog = "INSERT INTO EMPLOYEE_LOG VALUES('" + userno + "', 'Updated " + empacc + "', default)";
            PreparedStatement insertlogPST = adminConnect.prepareStatement(insertLog);
            insertlogPST.execute();
        }
            txt_empacc.setText("");
            txt_empstat.setText("");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
        
    }//GEN-LAST:event_employeeAccUpdateActionPerformed

    private void txt_search10KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_search10KeyTyped
        //For Searching Employee Account Record
        String type = txt_search10.getText();
        try{
            String search = "SELECT empNo, fName+ ' '+lName AS 'Employee Name',Position, email, stat, loginDate, loginTime FROM EMPLOYEE WHERE stat LIKE '%"+type+"%'";
            pst = adminConnect.prepareStatement(search);
            rs = pst.executeQuery();
            employeeAccountsTable.setModel(DbUtils.resultSetToTableModel(rs));

        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_txt_search10KeyTyped

    private void employeeAccountsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_employeeAccountsTableMouseClicked
        //For Selecting Employee Account Record
        int row = employeeAccountsTable.getSelectedRow();
        String click = employeeAccountsTable.getModel().getValueAt(row, 0).toString();
        String select = "SELECT empNo, stat FROM EMPLOYEE WHERE empNo = '"+click+"'";
        try{
            pst = adminConnect.prepareStatement(select);
            rs = pst.executeQuery();
            if(rs.next()){
                String empacc = rs.getString(1);
                txt_empacc.setText(empacc);
                String empstat = rs.getString(2);
                txt_empstat.setText(empstat);
            }
            
        }catch(Exception e){
           JOptionPane.showMessageDialog(null,e); 
        }
    }//GEN-LAST:event_employeeAccountsTableMouseClicked

    private void collegePrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_collegePrintActionPerformed
        //For Printing College Record 
        MessageFormat header = new MessageFormat("College Record");
        try{
            boolean print = collegeTable.print(PrintMode.FIT_WIDTH, header, null);
            if(!print){
                JOptionPane.showMessageDialog(null, "Unable to Print");
            }else{
                 JOptionPane.showMessageDialog(null, "Printed Successfully");
            }
        }catch(PrinterException e){
             JOptionPane.showMessageDialog(null, "Unable to Print");
        }
    }//GEN-LAST:event_collegePrintActionPerformed

    private void coursePrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coursePrintActionPerformed
        //For Printing Course Record
               MessageFormat header = new MessageFormat("Course Record");
        try{
            boolean print = courseTable.print(PrintMode.FIT_WIDTH, header, null);
            if(!print){
                JOptionPane.showMessageDialog(null, "Unable to Print");
            }else{
                 JOptionPane.showMessageDialog(null, "Printed Successfully");
            }
        }catch(PrinterException e){
             JOptionPane.showMessageDialog(null, "Unable to Print");
        }
    }//GEN-LAST:event_coursePrintActionPerformed

    private void sectionPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sectionPrintActionPerformed
        //For Section Record
               MessageFormat header = new MessageFormat("Section Record");
        try{
            boolean print = sectionTable.print(PrintMode.FIT_WIDTH, header, null);
            if(!print){
                JOptionPane.showMessageDialog(null, "Unable to Print");
            }else{
                 JOptionPane.showMessageDialog(null, "Printed Successfully");
            }
        }catch(PrinterException e){
             JOptionPane.showMessageDialog(null, "Unable to Print");
        }
    }//GEN-LAST:event_sectionPrintActionPerformed

    private void studentPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentPrintActionPerformed
        //For Student Record
               MessageFormat header = new MessageFormat("Student Record");
        try{
            boolean print = studentTable.print(PrintMode.FIT_WIDTH, header, null);
            if(!print){
                JOptionPane.showMessageDialog(null, "Unable to Print");
            }else{
                 JOptionPane.showMessageDialog(null, "Printed Successfully");
            }
        }catch(PrinterException e){
             JOptionPane.showMessageDialog(null, "Unable to Print");
        }
    }//GEN-LAST:event_studentPrintActionPerformed

    private void registrationPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrationPrintActionPerformed
        //For Registration Record
               MessageFormat header = new MessageFormat("Registration Record");
        try{
            boolean print = registrationTable.print(PrintMode.FIT_WIDTH, header, null);
            if(!print){
                JOptionPane.showMessageDialog(null, "Unable to Print");
            }else{
                 JOptionPane.showMessageDialog(null, "Printed Successfully");
            }
        }catch(PrinterException e){
             JOptionPane.showMessageDialog(null, "Unable to Print");
        }
    }//GEN-LAST:event_registrationPrintActionPerformed

    private void employeePrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeePrintActionPerformed
        //For Employee Record
               MessageFormat header = new MessageFormat("Employee Record");
        try{
            boolean print = employeeTable.print(PrintMode.FIT_WIDTH, header, null);
            if(!print){
                JOptionPane.showMessageDialog(null, "Unable to Print");
            }else{
                 JOptionPane.showMessageDialog(null, "Printed Successfully");
            }
        }catch(PrinterException e){
             JOptionPane.showMessageDialog(null, "Unable to Print");
        }
    }//GEN-LAST:event_employeePrintActionPerformed

    private void subjectPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectPrintActionPerformed
        //For Subject Record
               MessageFormat header = new MessageFormat("Subject Record");
        try{
            boolean print = subjectTable.print(PrintMode.FIT_WIDTH, header, null);
            if(!print){
                JOptionPane.showMessageDialog(null, "Unable to Print");
            }else{
                 JOptionPane.showMessageDialog(null, "Printed Successfully");
            }
        }catch(PrinterException e){
             JOptionPane.showMessageDialog(null, "Unable to Print");
        }
    }//GEN-LAST:event_subjectPrintActionPerformed

    private void coursesubPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coursesubPrintActionPerformed
        //For Course Subject Record
               MessageFormat header = new MessageFormat("Course Subject Record");
        try{
            boolean print = registeredListTable.print(PrintMode.FIT_WIDTH, header, null);
            if(!print){
                JOptionPane.showMessageDialog(null, "Unable to Print");
            }else{
                 JOptionPane.showMessageDialog(null, "Printed Successfully");
            }
        }catch(PrinterException e){
             JOptionPane.showMessageDialog(null, "Unable to Print");
        }
    }//GEN-LAST:event_coursesubPrintActionPerformed

    private void registeredListPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registeredListPrintActionPerformed
        //For Registered List
        MessageFormat header = new MessageFormat("Registered Student List");
        try{
            boolean print = registeredListTable.print(PrintMode.FIT_WIDTH, header, null);
            if(!print){
                JOptionPane.showMessageDialog(null, "Unable to Print");
            }else{
                 JOptionPane.showMessageDialog(null, "Printed Successfully");
            }
        }catch(PrinterException e){
             JOptionPane.showMessageDialog(null, "Unable to Print");
        }
    }//GEN-LAST:event_registeredListPrintActionPerformed

    private void studentAccPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentAccPrintActionPerformed
        //For Student Account List
        MessageFormat header = new MessageFormat("Student Account List");
        try{
            boolean print = studentAccountsTable.print(PrintMode.FIT_WIDTH, header, null);
            if(!print){
                JOptionPane.showMessageDialog(null, "Unable to Print");
            }else{
                 JOptionPane.showMessageDialog(null, "Printed Successfully");
            }
        }catch(PrinterException e){
             JOptionPane.showMessageDialog(null, "Unable to Print");
        }
    }//GEN-LAST:event_studentAccPrintActionPerformed

    private void employeeAccPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeeAccPrintActionPerformed
        //For Employee Account List
        MessageFormat header = new MessageFormat("Employee Account List");
        try{
            boolean print = employeeAccountsTable.print(PrintMode.FIT_WIDTH, header, null);
            if(!print){
                JOptionPane.showMessageDialog(null, "Unable to Print");
            }else{
                 JOptionPane.showMessageDialog(null, "Printed Successfully");
            }
        }catch(PrinterException e){
             JOptionPane.showMessageDialog(null, "Unable to Print");
        }
    }//GEN-LAST:event_employeeAccPrintActionPerformed

    private void logoutMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseMoved
        // TODO add your handling code here:
        logout.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_logoutMouseMoved

    private void logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseClicked
        //Logging Out
        JOptionPane.showMessageDialog(null, "Logging out");
        LoginForm form = new LoginForm();
        form.show();
        form.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_logoutMouseClicked

    private void txt_bdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_bdateMouseClicked
        // TODO add your handling code here:
        txt_bdate.setText("");
    }//GEN-LAST:event_txt_bdateMouseClicked

    private void txt_bdate1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_bdate1MouseClicked
        // TODO add your handling code here:
        txt_bdate1.setText("");
    }//GEN-LAST:event_txt_bdate1MouseClicked

    private void studentLogsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentLogsMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_studentLogsMouseClicked

    private void employeeLogsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_employeeLogsMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_employeeLogsMouseClicked

    private void refreshStudentLogsMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshStudentLogsMouseMoved
        // TODO add your handling code here:
        refreshStudentLogs.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_refreshStudentLogsMouseMoved

    private void refreshStudentLogsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshStudentLogsMouseClicked
        // TODO add your handling code here:
        StudentLogs();
    }//GEN-LAST:event_refreshStudentLogsMouseClicked

    private void refreshEmployeeLogsMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshEmployeeLogsMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_refreshEmployeeLogsMouseMoved

    private void refreshEmployeeLogsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshEmployeeLogsMouseClicked
        // TODO add your handling code here:
       refreshEmployeeLogs.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
       EmployeeLogs();
    }//GEN-LAST:event_refreshEmployeeLogsMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AdminDashboard adminD = new AdminDashboard();
                adminD.show();
                adminD.setLocationRelativeTo(null);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel college;
    public javax.swing.JButton collegeDelete;
    public javax.swing.JButton collegeInsert;
    public javax.swing.JButton collegePrint;
    public javax.swing.JTable collegeTable;
    public javax.swing.JButton collegeUpdate;
    public javax.swing.JLabel course;
    public javax.swing.JButton courseDelete;
    public javax.swing.JButton courseInsert;
    public javax.swing.JButton coursePrint;
    public javax.swing.JTable courseTable;
    public javax.swing.JButton courseUpdate;
    public javax.swing.JButton coursesubDelete;
    public javax.swing.JButton coursesubInsert;
    public javax.swing.JButton coursesubPrint;
    public javax.swing.JTable coursesubTable;
    public javax.swing.JButton coursesubUpdate;
    public javax.swing.JLabel coursesubject;
    public javax.swing.JLabel employee;
    public javax.swing.JButton employeeAccPrint;
    public javax.swing.JButton employeeAccUpdate;
    public javax.swing.JLabel employeeAccounts;
    public javax.swing.JTable employeeAccountsTable;
    public javax.swing.JButton employeeDelete;
    public javax.swing.JButton employeeInsert;
    public javax.swing.JTable employeeLogs;
    public javax.swing.JButton employeePrint;
    public javax.swing.JTable employeeTable;
    public javax.swing.JButton employeeUpdate;
    public javax.swing.JLabel enroll;
    public javax.swing.JLabel home;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel10;
    public javax.swing.JLabel jLabel11;
    public javax.swing.JLabel jLabel12;
    public javax.swing.JLabel jLabel13;
    public javax.swing.JLabel jLabel14;
    public javax.swing.JLabel jLabel15;
    public javax.swing.JLabel jLabel16;
    public javax.swing.JLabel jLabel17;
    public javax.swing.JLabel jLabel18;
    public javax.swing.JLabel jLabel19;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel20;
    public javax.swing.JLabel jLabel21;
    public javax.swing.JLabel jLabel22;
    public javax.swing.JLabel jLabel23;
    public javax.swing.JLabel jLabel24;
    public javax.swing.JLabel jLabel25;
    public javax.swing.JLabel jLabel26;
    public javax.swing.JLabel jLabel27;
    public javax.swing.JLabel jLabel28;
    public javax.swing.JLabel jLabel29;
    public javax.swing.JLabel jLabel3;
    public javax.swing.JLabel jLabel30;
    public javax.swing.JLabel jLabel31;
    public javax.swing.JLabel jLabel32;
    public javax.swing.JLabel jLabel33;
    public javax.swing.JLabel jLabel34;
    public javax.swing.JLabel jLabel35;
    public javax.swing.JLabel jLabel36;
    public javax.swing.JLabel jLabel37;
    public javax.swing.JLabel jLabel38;
    public javax.swing.JLabel jLabel39;
    public javax.swing.JLabel jLabel40;
    public javax.swing.JLabel jLabel41;
    public javax.swing.JLabel jLabel42;
    public javax.swing.JLabel jLabel43;
    public javax.swing.JLabel jLabel44;
    public javax.swing.JLabel jLabel45;
    public javax.swing.JLabel jLabel46;
    public javax.swing.JLabel jLabel47;
    public javax.swing.JLabel jLabel48;
    public javax.swing.JLabel jLabel49;
    public javax.swing.JLabel jLabel50;
    public javax.swing.JLabel jLabel51;
    public javax.swing.JLabel jLabel52;
    public javax.swing.JLabel jLabel53;
    public javax.swing.JLabel jLabel54;
    public javax.swing.JLabel jLabel55;
    public javax.swing.JLabel jLabel56;
    public javax.swing.JLabel jLabel57;
    public javax.swing.JLabel jLabel58;
    public javax.swing.JLabel jLabel59;
    public javax.swing.JLabel jLabel60;
    public javax.swing.JLabel jLabel9;
    public javax.swing.JPanel jPanel1;
    public javax.swing.JPanel jPanel10;
    public javax.swing.JPanel jPanel11;
    public javax.swing.JPanel jPanel12;
    public javax.swing.JPanel jPanel13;
    public javax.swing.JPanel jPanel14;
    public javax.swing.JPanel jPanel15;
    public javax.swing.JPanel jPanel16;
    public javax.swing.JPanel jPanel17;
    public javax.swing.JPanel jPanel18;
    public javax.swing.JPanel jPanel19;
    public javax.swing.JPanel jPanel2;
    public javax.swing.JPanel jPanel20;
    public javax.swing.JPanel jPanel21;
    public javax.swing.JPanel jPanel22;
    public javax.swing.JPanel jPanel23;
    public javax.swing.JPanel jPanel24;
    public javax.swing.JPanel jPanel25;
    public javax.swing.JPanel jPanel3;
    public javax.swing.JPanel jPanel4;
    public javax.swing.JPanel jPanel5;
    public javax.swing.JPanel jPanel6;
    public javax.swing.JPanel jPanel7;
    public javax.swing.JPanel jPanel8;
    public javax.swing.JPanel jPanel9;
    public javax.swing.JScrollPane jScrollPane10;
    public javax.swing.JScrollPane jScrollPane11;
    public javax.swing.JScrollPane jScrollPane12;
    public javax.swing.JScrollPane jScrollPane13;
    public javax.swing.JScrollPane jScrollPane14;
    public javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JScrollPane jScrollPane3;
    public javax.swing.JScrollPane jScrollPane4;
    public javax.swing.JScrollPane jScrollPane5;
    public javax.swing.JScrollPane jScrollPane6;
    public javax.swing.JScrollPane jScrollPane7;
    public javax.swing.JScrollPane jScrollPane8;
    public javax.swing.JScrollPane jScrollPane9;
    public javax.swing.JTabbedPane jTabbedPane1;
    public javax.swing.JLabel l_date;
    public javax.swing.JLabel l_time;
    public javax.swing.JLabel logout;
    public javax.swing.JLabel refreshEmployeeLogs;
    public javax.swing.JLabel refreshStudentLogs;
    public javax.swing.JButton registeredListPrint;
    public javax.swing.JTable registeredListTable;
    public javax.swing.JLabel registeredlist;
    public javax.swing.JLabel registration;
    public javax.swing.JButton registrationDelete;
    public javax.swing.JButton registrationPrint;
    public javax.swing.JTable registrationTable;
    public javax.swing.JButton registrationUpdate;
    public javax.swing.JLabel section;
    public javax.swing.JButton sectionDelete;
    public javax.swing.JButton sectionInsert;
    public javax.swing.JButton sectionPrint;
    public javax.swing.JTable sectionTable;
    public javax.swing.JButton sectionUpdate;
    public javax.swing.JLabel student;
    public javax.swing.JButton studentAccPrint;
    public javax.swing.JButton studentAccUpdate;
    public javax.swing.JLabel studentAccounts;
    public javax.swing.JTable studentAccountsTable;
    public javax.swing.JButton studentDelete;
    public javax.swing.JTable studentLogs;
    public javax.swing.JButton studentPrint;
    public javax.swing.JTable studentTable;
    public javax.swing.JButton studentUpdate;
    public javax.swing.JLabel subject;
    public javax.swing.JButton subjectDelete;
    public javax.swing.JButton subjectInsert;
    public javax.swing.JButton subjectPrint;
    public javax.swing.JTable subjectTable;
    public javax.swing.JButton subjectUpdate;
    public javax.swing.JTextField txt_bdate;
    public javax.swing.JTextField txt_bdate1;
    public javax.swing.JTextField txt_brgy;
    public javax.swing.JTextField txt_city;
    public javax.swing.JTextField txt_colcode;
    public javax.swing.JTextField txt_college;
    public javax.swing.JTextField txt_colname;
    public javax.swing.JTextField txt_course;
    public javax.swing.JTextField txt_coursecode;
    public javax.swing.JTextField txt_coursedesc;
    public javax.swing.JTextField txt_email;
    public javax.swing.JTextField txt_emp;
    public javax.swing.JTextField txt_empacc;
    public javax.swing.JTextField txt_empno;
    public javax.swing.JTextField txt_emprank;
    public javax.swing.JTextField txt_empstat;
    public javax.swing.JTextField txt_enrolled;
    public javax.swing.JTextField txt_fname;
    public javax.swing.JTextField txt_fname1;
    public javax.swing.JTextField txt_gender;
    public javax.swing.JTextField txt_lab;
    public javax.swing.JTextField txt_lec;
    public javax.swing.JTextField txt_lname;
    public javax.swing.JTextField txt_lname1;
    public javax.swing.JTextField txt_mname;
    public javax.swing.JTextField txt_mname1;
    public javax.swing.JTextField txt_pos;
    public javax.swing.JTextField txt_postal;
    public javax.swing.JTextField txt_province;
    public javax.swing.JTextField txt_search;
    public javax.swing.JTextField txt_search1;
    public javax.swing.JTextField txt_search10;
    public javax.swing.JTextField txt_search2;
    public javax.swing.JTextField txt_search3;
    public javax.swing.JTextField txt_search4;
    public javax.swing.JTextField txt_search5;
    public javax.swing.JTextField txt_search6;
    public javax.swing.JTextField txt_search7;
    public javax.swing.JTextField txt_search8;
    public javax.swing.JTextField txt_search9;
    public javax.swing.JTextField txt_sec;
    public javax.swing.JTextField txt_sect;
    public javax.swing.JTextField txt_section;
    public javax.swing.JTextField txt_sem;
    public javax.swing.JTextField txt_street;
    public javax.swing.JTextField txt_studacc;
    public javax.swing.JTextField txt_student;
    public javax.swing.JTextField txt_studno;
    public javax.swing.JTextField txt_studstat;
    public javax.swing.JTextField txt_sub;
    public javax.swing.JTextField txt_subj;
    public javax.swing.JTextField txt_title;
    public javax.swing.JTextField txt_yr;
    public javax.swing.JLabel user;
    // End of variables declaration//GEN-END:variables

    
    // Method to populate the college table with data from the database
    private void CollegeTable(){
        String collegeQuery = "SELECT * FROM COLLEGE";
        try{
             st = adminConnect.createStatement();
            rs = st.executeQuery(collegeQuery);
            collegeTable.setModel(DbUtils.resultSetToTableModel(rs));
           
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
        
    }
    // Method to populate the course table with data from the database
    private void CourseTable(){
        String courseQuery = "SELECT * FROM COURSE";
        try{
            st = adminConnect.createStatement();
            rs = st.executeQuery(courseQuery);
            courseTable.setModel(DbUtils.resultSetToTableModel(rs));
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }
    // Method to populate the section table with data from the database
    private void SectionTable(){
        String sectionQuery = "SELECT * FROM SECTION";
        try{
            st = adminConnect.createStatement();
            rs = st.executeQuery(sectionQuery);
            sectionTable.setModel(DbUtils.resultSetToTableModel(rs));
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }
    // Method to populate the student table with data from the database
    private void StudentTable(){
        String studentQuery = "SELECT studentno,lname,fname,mname,gender,bdate,street,brgy,city,province,postal_code,dateenrolled FROM STUDENT ORDER BY lname asc";
        try{
            st = adminConnect.createStatement();
            rs = st.executeQuery(studentQuery);
            studentTable.setModel(DbUtils.resultSetToTableModel(rs));
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }
    // Method to populate the registration table with data from the database
    private void RegistrationTable(){
        String registrationQuery = "SELECT * FROM REGISTRATION";
        try{
            st = adminConnect.createStatement();
            rs = st.executeQuery(registrationQuery);
            registrationTable.setModel(DbUtils.resultSetToTableModel(rs));
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }
    // Method to populate the employee table with data from the database
    private void EmployeeTable(){
       String employeeQuery = "SELECT empNo, lname, fname, mname, empRank, Position, bDate, email FROM EMPLOYEE ORDER BY lname asc";
        try{
            st = adminConnect.createStatement();
            rs = st.executeQuery(employeeQuery);
            employeeTable.setModel(DbUtils.resultSetToTableModel(rs));
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        } 
    }
    // Method to populate the subject table with data from the database
    private void SubjectTable(){
        String subjectQuery = "SELECT * FROM SUBJECT";
        try{
            st = adminConnect.createStatement();
            rs = st.executeQuery(subjectQuery);
           subjectTable.setModel(DbUtils.resultSetToTableModel(rs));
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        } 
    }
    // Method to populate the course-subject table with data from the database
    private void CourseSubTable(){
        String coursesubQuery = "SELECT * FROM COURSESUBJECT";
                try{
            st = adminConnect.createStatement();
            rs = st.executeQuery(coursesubQuery);
           coursesubTable.setModel(DbUtils.resultSetToTableModel(rs));
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        } 
    }
    // Method to populate the registered list table with data from the database
    private void RegisteredListTable(){
    String registeredListQuery = "SELECT reg.registrationNo, stud.studentNo, stud.fName + ' ' + stud.lName AS 'Student Name', col.colName, crs.courseDesc, cs.yrlevel, sec.section, cs.semester, cs.subjCode, sub.subjTitle " +
            "FROM REGISTRATION AS reg " +
            "INNER JOIN STUDENT AS stud ON reg.StudentNo = stud.StudentNo " +
            "INNER JOIN SECTION AS sec ON reg.Section = sec.Section " +
            "INNER JOIN COURSE AS crs ON sec.CourseCode = crs.CourseCode " +
            "INNER JOIN COLLEGE AS col ON crs.colCode = col.colCode " +
            "INNER JOIN COURSESUBJECT AS cs ON sec.Section = cs.Section " +
            "INNER JOIN SUBJECT AS sub ON cs.subjCode = sub.subjCode ORDER BY yrlevel asc";
                try{
            st = adminConnect.createStatement();
            rs = st.executeQuery(registeredListQuery);
           registeredListTable.setModel(DbUtils.resultSetToTableModel(rs));
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        } 
    }
    // Method to populate the student accounts table with data from the database
    private void StudentAccounts(){
        String studentAccounts = "SELECT studentNo, fName+ ' '+lName AS 'Student Name', email, stat, loginDate, loginTime FROM STUDENT";
        try{
            st = adminConnect.createStatement();
            rs = st.executeQuery(studentAccounts);
           studentAccountsTable.setModel(DbUtils.resultSetToTableModel(rs));
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        } 

    }
    // Method to populate the employee accounts table with data from the database
    private void EmployeeAccounts(){
        String employeeAccounts = "SELECT empNo, fName+ ' '+lName AS 'Employee Name',Position, email, stat, loginDate, loginTime FROM EMPLOYEE";
        try{
            st = adminConnect.createStatement();
            rs = st.executeQuery(employeeAccounts);
           employeeAccountsTable.setModel(DbUtils.resultSetToTableModel(rs));
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }  
    }
    // Method to populate the student logs table with data from the database
    private void StudentLogs(){
        String trails = "SELECT sl.studLogNo, stud.studentNo, stud.fName + ' ' + stud.lName AS 'Student Name', sl.trail, sl.DateAndTime " +
        "FROM STUDENT stud INNER JOIN STUDENT_LOG sl ON stud.studentNo = sl.studentNo ORDER BY DateAndTime asc";
                try{
            st = adminConnect.createStatement();
            rs = st.executeQuery(trails);
           studentLogs.setModel(DbUtils.resultSetToTableModel(rs));
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        } 
    }
    // Method to populate the employee logs table with data from the database
    private void EmployeeLogs(){
        String trails = "SELECT el.empLogNo, emp.empNo,emp.fName+ ' '+emp.lName AS 'Employee Name', el.trail, el.DateAndTime " +
                "FROM EMPLOYEE emp INNER JOIN EMPLOYEE_LOG el ON emp.empNo = el.empNo ORDER BY DateAndTime asc";
                try{
            st = adminConnect.createStatement();
            rs = st.executeQuery(trails);
           employeeLogs.setModel(DbUtils.resultSetToTableModel(rs));
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        } 
    }
    // Method to display the current date on the dashboard
    private void Date(){
        Date d = new Date();
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("MMMM dd, yyyy");
        String date = simpleDateFormat.format(d);
        l_date.setText(date);
    }
    Timer t;// Declare a Timer object to update the time periodically
    SimpleDateFormat simpleTimeFormat;// Declare a SimpleDateFormat object to format the time
    
    // Method to display the current time on the dashboard
    private void Time(){
        t = new Timer(0, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Date dt = new Date();
                simpleTimeFormat = new SimpleDateFormat("h:mm a");
                String time = simpleTimeFormat.format(dt);
                l_time.setText(time);
            }
        });
        t.start();// Start the Timer to begin updating the time

    }
}
