/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package enrollmentSystem;

import java.awt.Color;
import java.awt.Desktop;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.HashSet;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
import javax.swing.table.JTableHeader;
import net.proteanit.sql.DbUtils;

// Define the EmployeeSubject class that inherits JFrame to create a GUI window
public class EmployeeSubject extends javax.swing.JFrame {
    Connection adminConnect;// Connection for admin database
    PreparedStatement pst = null;// PreparedStatement for executing SQL queries
    Statement st = null;//Statement for executing SQL queries
    ResultSet rs = null;// ResultSet for storing the result of SQL queries
    
    // Constructor for EmployeeSubject
    public EmployeeSubject() {
        initComponents();
        adminConnect = UserLogins.admin();// Establish connection to the admin database
        MySubject();// Retrieve and display subjects for the employee
        TableFormat(); // Format the table to display subjects in a user-friendly way
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        employeeSubject = new javax.swing.JPanel();
        placeWhere_scrollpane = new javax.swing.JScrollPane();
        placeWhere_text = new javax.swing.JTextArea();
        mySubjectTable_scrollpane = new javax.swing.JScrollPane();
        mySubjectTable = new javax.swing.JTable();
        school_scrollpane = new javax.swing.JScrollPane();
        school_text = new javax.swing.JTextArea();
        employee_scrollpane = new javax.swing.JScrollPane();
        employee_text = new javax.swing.JTextArea();
        school_logo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        employeeSubject.setBackground(new java.awt.Color(255, 255, 255));
        employeeSubject.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        employeeSubject.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        placeWhere_scrollpane.setBackground(new java.awt.Color(255, 255, 255));
        placeWhere_scrollpane.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        placeWhere_scrollpane.setForeground(new java.awt.Color(255, 255, 255));
        placeWhere_scrollpane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        placeWhere_scrollpane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        placeWhere_text.setColumns(20);
        placeWhere_text.setRows(5);
        placeWhere_text.setText("Guinhawa, City of Malolos, Bulacan");
        placeWhere_text.setAutoscrolls(false);
        placeWhere_text.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        placeWhere_text.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        placeWhere_scrollpane.setViewportView(placeWhere_text);

        employeeSubject.add(placeWhere_scrollpane, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 50, 190, 30));

        mySubjectTable_scrollpane.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mySubjectTable_scrollpane.setViewportBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        mySubjectTable.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mySubjectTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        mySubjectTable_scrollpane.setViewportView(mySubjectTable);

        employeeSubject.add(mySubjectTable_scrollpane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 184, 780, 620));

        school_scrollpane.setBackground(new java.awt.Color(255, 255, 255));
        school_scrollpane.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        school_scrollpane.setForeground(new java.awt.Color(255, 255, 255));
        school_scrollpane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        school_scrollpane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        school_text.setColumns(20);
        school_text.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        school_text.setRows(5);
        school_text.setText("BULACAN STATE UNIVERSITY");
        school_text.setAutoscrolls(false);
        school_text.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        school_text.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        school_scrollpane.setViewportView(school_text);

        employeeSubject.add(school_scrollpane, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 30, 180, 18));

        employee_scrollpane.setBackground(new java.awt.Color(255, 255, 255));
        employee_scrollpane.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        employee_scrollpane.setForeground(new java.awt.Color(255, 255, 255));
        employee_scrollpane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        employee_scrollpane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        employee_text.setColumns(20);
        employee_text.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        employee_text.setRows(5);
        employee_text.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        employee_text.setCaretColor(new java.awt.Color(255, 255, 255));
        employee_text.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        employee_scrollpane.setViewportView(employee_text);

        employeeSubject.add(employee_scrollpane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 780, 40));

        school_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/enrollmentSystem/bsuLogo (1).png"))); // NOI18N
        employeeSubject.add(school_logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, -1));

        getContentPane().add(employeeSubject, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 780, 910));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeSubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeSubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeSubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeSubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EmployeeSubject empSubject = new EmployeeSubject();
                empSubject.show();
            }
        });
    }
    // Method to get employee's subjects and display them in a table
    private void MySubject(){
          // Query to retrieve employee's subjects along with relevant details
         String mySubjectQuery = "SELECT  cs.section, cs.YrLevel, cs.Semester, s.subjCode, s.subjTitle, s.lec, s.lab, SUM(s.lec + s.lab) AS \"Credit\"" +
        "FROM COURSESUBJECT CS INNER JOIN SUBJECT S ON cs.subjCode = s.subjCode INNER JOIN EMPLOYEE E ON s.empNo = E.empNo " +
        "WHERE e.empNo = (SELECT TOP 1 empno FROM EMPLOYEE ORDER BY loginDate DESC, loginTime DESC) " +
        "GROUP BY cs.section, cs.YrLevel, cs.Semester, s.subjCode, s.subjTitle, s.lec, s.lab, e.loginDate, e.loginTime, e.empNo, e.fname, e.lname " +
        "ORDER BY e.loginDate DESC, e.loginTime DESC";
         
         // Query to retrieve the latest logged-in employee's details
         String employeeQuery = "SELECT TOP 1 empno, fname+ ' '+lname AS 'Username' FROM EMPLOYEE ORDER BY loginDate DESC, loginTime DESC";
         try{
            // Execute the query to get the employee's subjects
            st = adminConnect.createStatement();
            rs = st.executeQuery(mySubjectQuery);
            
            // Execute the query to get the latest logged-in employee's details
            pst = adminConnect.prepareStatement(employeeQuery);
            ResultSet getEmployee = pst.executeQuery();
            
             // Set the retrieved data to the table model for display
            mySubjectTable.setModel(DbUtils.resultSetToTableModel(rs));
            // Check if employee record is found
            if(!getEmployee.next()){
                JOptionPane.showMessageDialog(null,"Record not found");
            }else{
                // Retrieve employee details
                String empno = getEmployee.getString("empno");
                String empname = getEmployee.getString("Username");
                // set employee details to the JTextArea
                employee_text.setText(employee_text.getText()+"Employee No: "+empno+"\n");
                employee_text.setText(employee_text.getText()+"Employee Name: "+empname+"");
            }
            
        }catch(Exception e){
            // Display any exception that occurs
            JOptionPane.showMessageDialog(null,e);
        }
    }
    // Method to customize the appearance of the table
    private void TableFormat(){
        // Get the table header
        JTableHeader header = mySubjectTable.getTableHeader();
        header.setVisible(true); // Make the table header visible
        mySubjectTable_scrollpane.getColumnHeader().setVisible(true);// Make the column headers of the table visible
        mySubjectTable_scrollpane.getViewport().setBackground(Color.white);// Set the background color of the table viewport to white
        
    }
    // Method to initiate a print job
    public void PrintNow(){
        // Get a printer job instance
        PrinterJob job = PrinterJob.getPrinterJob();
        job.setJobName("Print Data");// Set the name of the print job
        
        // Set the printable content using a Printable interface
        job.setPrintable(new Printable() {
            @Override
            public int print(Graphics graphics, PageFormat pf, int pageNum) throws PrinterException {
             // Check if the page number is valid
            if(pageNum > 0){
                return Printable.NO_SUCH_PAGE;
            }
            //Render and scale the graphics for printing
            Graphics2D g2 = (Graphics2D)graphics;
            g2.translate(pf.getImageableX(), pf.getImageableY());
            g2.scale(0.700,0.760);
            
            employeeSubject.paint(g2); // Print the contents of the component (employeeSubject)
            return Printable.PAGE_EXISTS;// Indicate that the page exists and can be printed
               
            }
        });
        // Initiate the print job
        try{
            job.print();
        }catch(PrinterException e){
            // Handle any exceptions that occur during printing
            JOptionPane.showMessageDialog(null, e);
        }
        

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JPanel employeeSubject;
    public javax.swing.JScrollPane employee_scrollpane;
    public javax.swing.JTextArea employee_text;
    public javax.swing.JTable mySubjectTable;
    public javax.swing.JScrollPane mySubjectTable_scrollpane;
    public javax.swing.JScrollPane placeWhere_scrollpane;
    public javax.swing.JTextArea placeWhere_text;
    public javax.swing.JLabel school_logo;
    public javax.swing.JScrollPane school_scrollpane;
    public javax.swing.JTextArea school_text;
    // End of variables declaration//GEN-END:variables
}
