/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package enrollmentSystem;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.swing.JOptionPane;

 // Define the ForgotPass class that inherits JFrame to create a GUI window
public class ForgotPass extends javax.swing.JFrame {
Session newSession = null;// Session object to manage email session
MimeMessage mimeMessage = null;// MimeMessage object to create email messages
Connection studConnect = null; // Connection for student database
Connection adminConnect = null;// Connection for admin database
PreparedStatement pst = null;// PreparedStatement for executing SQL queries
ResultSet rs = null;// ResultSet for storing the result of SQL queries

    // Constructor for StaffDashboard
    public ForgotPass() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        forgotPassForm = new javax.swing.JPanel();
        formTitle = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        email_label = new javax.swing.JLabel();
        txt_email = new javax.swing.JTextField();
        verifyButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        forgotPassForm.setBackground(new java.awt.Color(246, 245, 242));

        formTitle.setBackground(new java.awt.Color(163, 67, 67));

        jLabel1.setFont(new java.awt.Font("Imprint MT Shadow", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("FORGOT PASSWORD");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout formTitleLayout = new javax.swing.GroupLayout(formTitle);
        formTitle.setLayout(formTitleLayout);
        formTitleLayout.setHorizontalGroup(
            formTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formTitleLayout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(100, Short.MAX_VALUE))
        );
        formTitleLayout.setVerticalGroup(
            formTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
        );

        email_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        email_label.setText("Please enter your email address");

        txt_email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_emailActionPerformed(evt);
            }
        });

        verifyButton.setText("Verify");
        verifyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verifyButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout forgotPassFormLayout = new javax.swing.GroupLayout(forgotPassForm);
        forgotPassForm.setLayout(forgotPassFormLayout);
        forgotPassFormLayout.setHorizontalGroup(
            forgotPassFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(formTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(forgotPassFormLayout.createSequentialGroup()
                .addGroup(forgotPassFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(forgotPassFormLayout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addGroup(forgotPassFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(email_label, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(forgotPassFormLayout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addComponent(verifyButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        forgotPassFormLayout.setVerticalGroup(
            forgotPassFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(forgotPassFormLayout.createSequentialGroup()
                .addComponent(formTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addComponent(email_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(verifyButton)
                .addGap(0, 180, Short.MAX_VALUE))
        );

        getContentPane().add(forgotPassForm, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 420));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_emailActionPerformed

    private void verifyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verifyButtonActionPerformed
        // Retrieve the email address from the text field
        String email = txt_email.getText();
        String studAcc = "SELECT * FROM STUDENT WHERE email = '"+email+"'";// SQL query to select student records based on the email address
        String empAcc = "SELECT * FROM EMPLOYEE WHERE email = '"+email+"'";// SQL query to select employee records based on the email address
        // Create an instance of the ForgotPass class
        ForgotPass forgot = new ForgotPass();

        // Check if the email field is empty
        if(email.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill in all the required fields.");
            return; // Exit the method without proceeding further
        }
        // Check if the email follows the expected format for student emails
        if(email.startsWith("2022") && email.endsWith("@bulsu.edu.ph")){
            try{
                 // Establish a connection to the student database
                studConnect=UserLogins.stud();
                // Prepare the SQL query to find the student account by email
                pst = studConnect.prepareStatement(studAcc);// Use a prepared statement to avoid SQL injection
                rs = pst.executeQuery();

                 // Check if the result set is empty (i.e., no matching email found)
                if(!rs.next()){
                    JOptionPane.showMessageDialog(null, "Invalid email address");
                }else{
                    // Retrieve the password from the result set
                    String pw = rs.getString("pass");
                    //Notify the user that the email is being sent
                    JOptionPane.showMessageDialog(null, "Check your email");
                    forgot.setupServerProperties();// Set up the email server properties
                    forgot.draftEmail(email);// Draft the email with the password information
                    forgot.sendEmail();// Send the email

                }

            }catch(Exception e){
                // Handle any exceptions that occur during the process
                JOptionPane.showMessageDialog(null, e);
            }
         // Check if the email ends with "@gmail.com"
        }else if(email.endsWith("@gmail.com")){
        try{
                // Establish a connection to the admin database
                adminConnect=UserLogins.admin();
                // Prepare the SQL query to find the employee account by email
                pst = adminConnect.prepareStatement(empAcc);// Use a prepared statement to avoid SQL injection
                rs = pst.executeQuery();

                // Check if the result set is empty (i.e., no matching email found)
                if(!rs.next()){
                    JOptionPane.showMessageDialog(null, "Invalid email address");
                }else{
                    // Retrieve the password from the result set
                    String pw = rs.getString("pass");
                    // Notify the user that the email is being sent
                    JOptionPane.showMessageDialog(null, "Check your email");
                    forgot.setupServerProperties(); // Set up the email server properties
                    forgot.draftEmail(email);// Draft the email with the password information
                    forgot.sendEmail(); // Send the email

                }

            }catch(Exception e){
                 // Handle any exceptions that occur during the process
                JOptionPane.showMessageDialog(null, e);
            }
    }

    }//GEN-LAST:event_verifyButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ForgotPass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ForgotPass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ForgotPass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ForgotPass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
         ForgotPass forgot = new ForgotPass();
        forgot.show();
        forgot.setLocationRelativeTo(null);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel email_label;
    public javax.swing.JPanel forgotPassForm;
    public javax.swing.JPanel formTitle;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JTextField txt_email;
    public javax.swing.JButton verifyButton;
    // End of variables declaration//GEN-END:variables
   // This method sets up the server properties needed to send an email
    private void setupServerProperties() {
         // Get the system properties
        Properties properties = System.getProperties();
        // Set the mail server properties
        properties.put("mail.smtp.port", "587");// SMTP port number
        properties.put("mail.smtp.auth", "true"); // Enable authentication
        properties.put("mail.smtp.starttls.enable", "true");// Enable STARTTLS
        newSession = Session.getDefaultInstance(properties, null);// Create a new session with the specified properties
    }

    // Method to send an email using the configured session
    private void sendEmail() throws MessagingException {
        // Email credentials
        String username = "samuelalac01@gmail.com"; // Your email address
        String fromUserPassword = "yqmn ytmn nqjn vgrb";// Your app password
        String emailHost = "smtp.gmail.com";// SMTP server address for Gmail
        Transport transport = newSession.getTransport("smtp");// Get the transport object for sending the email
        transport.connect(emailHost, username, fromUserPassword);// Connect to the SMTP server using the provided credentials
        transport.sendMessage(mimeMessage, mimeMessage.getAllRecipients());// Send the email message
        transport.close();// Close the transport to release resources
        System.out.println("Email successfully sent");// Print a confirmation message
    }
    //Multipurpose Internet Mail Extensions (MIME)
    // Method to draft an email based on the recipient's email address
    private MimeMessage draftEmail(String email) throws AddressException, MessagingException {
        //For Student
        if(email.startsWith("20221") && email.endsWith("@bulsu.edu.ph")){
        // Define recipients, subject, and body for student email
        String[] emailRecipients = {"samuelalac00@gmail.com", email};
        String emailSubject = "Forgot Password";
        String emailBody ="To change your password,"
                + " kindly use this temporary password to access account configuration"
                + " Password: Config";
         // Create a new MimeMessage for the email
         mimeMessage = new MimeMessage(newSession);

         // Add recipients to the email
        for (int i = 0; i < emailRecipients.length; i++) {
            mimeMessage.addRecipient(Message.RecipientType.TO, new InternetAddress(emailRecipients[i]));
        }
        // Set the subject of the email
        mimeMessage.setSubject(emailSubject);

        // Create a body part with the email content
        MimeBodyPart bodyPart = new MimeBodyPart();
        bodyPart.setContent(emailBody, "text/html");
        // Create a multipart to combine the body part
        MimeMultipart multiPart = new MimeMultipart();
        multiPart.addBodyPart(bodyPart);
        // Set the content of the email to the multipart
        mimeMessage.setContent(multiPart);
        
        //For Staff
        }else if(email.endsWith("@gmail.com")){
             // Define recipients, subject, and body for staff email
        String[] emailRecipients = {"samuelalac00@gmail.com", email};
        String emailSubject = "Forgot Password";
        String emailBody ="To change your password,"
                + " kindly use this temporary password to access account configuration"
                + " Password: adminConfig"; 
        
        // Create a new MimeMessage for the email
        mimeMessage = new MimeMessage(newSession);

         // Add recipients to the email
        for (int i = 0; i < emailRecipients.length; i++) {
            mimeMessage.addRecipient(Message.RecipientType.TO, new InternetAddress(emailRecipients[i]));
        }
        // Set the subject of the email
        mimeMessage.setSubject(emailSubject);

        // Create a body part with the email content
        MimeBodyPart bodyPart = new MimeBodyPart();
        bodyPart.setContent(emailBody, "text/html");
        // Create a multipart to combine the body part
        MimeMultipart multiPart = new MimeMultipart();
        multiPart.addBodyPart(bodyPart);
        // Set the content of the email to the multipart
        mimeMessage.setContent(multiPart);
        }
        return mimeMessage;
    }
}
